@layer properties {
	@supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
		((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
		*,
		:before,
		:after {
			--tw-translate-x: 0;
			--tw-translate-y: 0;
			--tw-translate-z: 0;
			--tw-scale-x: 1;
			--tw-scale-y: 1;
			--tw-scale-z: 1;
			--tw-rotate-x: initial;
			--tw-rotate-y: initial;
			--tw-rotate-z: initial;
			--tw-skew-x: initial;
			--tw-skew-y: initial;
			--tw-space-y-reverse: 0;
			--tw-space-x-reverse: 0;
			--tw-divide-y-reverse: 0;
			--tw-border-style: solid;
			--tw-gradient-position: initial;
			--tw-gradient-from: transparent;
			--tw-gradient-via: transparent;
			--tw-gradient-to: transparent;
			--tw-gradient-stops: initial;
			--tw-gradient-via-stops: initial;
			--tw-gradient-from-position: 0%;
			--tw-gradient-via-position: 50%;
			--tw-gradient-to-position: 100%;
			--tw-leading: initial;
			--tw-font-weight: initial;
			--tw-tracking: initial;
			--tw-shadow: 0 0 transparent;
			--tw-shadow-color: initial;
			--tw-shadow-alpha: 100%;
			--tw-inset-shadow: 0 0 transparent;
			--tw-inset-shadow-color: initial;
			--tw-inset-shadow-alpha: 100%;
			--tw-ring-color: initial;
			--tw-ring-shadow: 0 0 transparent;
			--tw-inset-ring-color: initial;
			--tw-inset-ring-shadow: 0 0 transparent;
			--tw-ring-inset: initial;
			--tw-ring-offset-width: 0px;
			--tw-ring-offset-color: #fff;
			--tw-ring-offset-shadow: 0 0 transparent;
			--tw-outline-style: solid;
			--tw-blur: initial;
			--tw-brightness: initial;
			--tw-contrast: initial;
			--tw-grayscale: initial;
			--tw-hue-rotate: initial;
			--tw-invert: initial;
			--tw-opacity: initial;
			--tw-saturate: initial;
			--tw-sepia: initial;
			--tw-drop-shadow: initial;
			--tw-drop-shadow-color: initial;
			--tw-drop-shadow-alpha: 100%;
			--tw-drop-shadow-size: initial;
			--tw-duration: initial;
			--tw-ease: initial;
			--tw-animation-delay: 0s;
			--tw-animation-direction: normal;
			--tw-animation-duration: initial;
			--tw-animation-fill-mode: none;
			--tw-animation-iteration-count: 1;
			--tw-enter-blur: 0;
			--tw-enter-opacity: 1;
			--tw-enter-rotate: 0;
			--tw-enter-scale: 1;
			--tw-enter-translate-x: 0;
			--tw-enter-translate-y: 0;
			--tw-exit-blur: 0;
			--tw-exit-opacity: 1;
			--tw-exit-rotate: 0;
			--tw-exit-scale: 1;
			--tw-exit-translate-x: 0;
			--tw-exit-translate-y: 0;
		}
		::backdrop {
			--tw-translate-x: 0;
			--tw-translate-y: 0;
			--tw-translate-z: 0;
			--tw-scale-x: 1;
			--tw-scale-y: 1;
			--tw-scale-z: 1;
			--tw-rotate-x: initial;
			--tw-rotate-y: initial;
			--tw-rotate-z: initial;
			--tw-skew-x: initial;
			--tw-skew-y: initial;
			--tw-space-y-reverse: 0;
			--tw-space-x-reverse: 0;
			--tw-divide-y-reverse: 0;
			--tw-border-style: solid;
			--tw-gradient-position: initial;
			--tw-gradient-from: transparent;
			--tw-gradient-via: transparent;
			--tw-gradient-to: transparent;
			--tw-gradient-stops: initial;
			--tw-gradient-via-stops: initial;
			--tw-gradient-from-position: 0%;
			--tw-gradient-via-position: 50%;
			--tw-gradient-to-position: 100%;
			--tw-leading: initial;
			--tw-font-weight: initial;
			--tw-tracking: initial;
			--tw-shadow: 0 0 transparent;
			--tw-shadow-color: initial;
			--tw-shadow-alpha: 100%;
			--tw-inset-shadow: 0 0 transparent;
			--tw-inset-shadow-color: initial;
			--tw-inset-shadow-alpha: 100%;
			--tw-ring-color: initial;
			--tw-ring-shadow: 0 0 transparent;
			--tw-inset-ring-color: initial;
			--tw-inset-ring-shadow: 0 0 transparent;
			--tw-ring-inset: initial;
			--tw-ring-offset-width: 0px;
			--tw-ring-offset-color: #fff;
			--tw-ring-offset-shadow: 0 0 transparent;
			--tw-outline-style: solid;
			--tw-blur: initial;
			--tw-brightness: initial;
			--tw-contrast: initial;
			--tw-grayscale: initial;
			--tw-hue-rotate: initial;
			--tw-invert: initial;
			--tw-opacity: initial;
			--tw-saturate: initial;
			--tw-sepia: initial;
			--tw-drop-shadow: initial;
			--tw-drop-shadow-color: initial;
			--tw-drop-shadow-alpha: 100%;
			--tw-drop-shadow-size: initial;
			--tw-duration: initial;
			--tw-ease: initial;
			--tw-animation-delay: 0s;
			--tw-animation-direction: normal;
			--tw-animation-duration: initial;
			--tw-animation-fill-mode: none;
			--tw-animation-iteration-count: 1;
			--tw-enter-blur: 0;
			--tw-enter-opacity: 1;
			--tw-enter-rotate: 0;
			--tw-enter-scale: 1;
			--tw-enter-translate-x: 0;
			--tw-enter-translate-y: 0;
			--tw-exit-blur: 0;
			--tw-exit-opacity: 1;
			--tw-exit-rotate: 0;
			--tw-exit-scale: 1;
			--tw-exit-translate-x: 0;
			--tw-exit-translate-y: 0;
		}
	}
}
@layer theme {
	:root,
	:host {
		--color-red-50: #fef2f2;
		--color-red-100: #ffe2e2;
		--color-red-200: #ffcaca;
		--color-red-300: #ffa3a3;
		--color-red-500: #fb2c36;
		--color-red-600: #e40014;
		--color-red-700: #bf000f;
		--color-red-800: #9f0712;
		--color-red-900: #82181a;
		--color-orange-100: #ffedd5;
		--color-orange-200: #ffd7a8;
		--color-orange-800: #9f2d00;
		--color-orange-900: #7e2a0c;
		--color-amber-50: #fffbeb;
		--color-amber-600: #dd7400;
		--color-yellow-100: #fef9c2;
		--color-yellow-200: #fff085;
		--color-yellow-500: #edb200;
		--color-yellow-600: #cd8900;
		--color-yellow-800: #874b00;
		--color-yellow-900: #733e0a;
		--color-green-50: #f0fdf4;
		--color-green-100: #dcfce7;
		--color-green-200: #b9f8cf;
		--color-green-500: #00c758;
		--color-green-600: #00a544;
		--color-green-700: #008138;
		--color-green-800: #016630;
		--color-green-900: #0d542b;
		--color-blue-50: #eff6ff;
		--color-blue-100: #dbeafe;
		--color-blue-200: #bedbff;
		--color-blue-500: #3080ff;
		--color-blue-600: #155dfc;
		--color-blue-700: #1447e6;
		--color-blue-800: #193cb8;
		--color-blue-900: #1c398e;
		--color-indigo-500: #625fff;
		--color-purple-50: #faf5ff;
		--color-purple-100: #f3e8ff;
		--color-purple-200: #e9d5ff;
		--color-purple-600: #9810fa;
		--color-purple-800: #6e11b0;
		--color-purple-900: #59168b;
		--color-pink-100: #fce7f3;
		--color-pink-200: #fccee8;
		--color-pink-900: #861043;
		--color-gray-50: #f9fafb;
		--color-gray-100: #f3f4f6;
		--color-gray-200: #e5e7eb;
		--color-gray-300: #d1d5dc;
		--color-gray-400: #99a1af;
		--color-gray-500: #6a7282;
		--color-gray-600: #4a5565;
		--color-gray-700: #364153;
		--color-gray-800: #1e2939;
		--color-gray-900: #101828;
		--color-black: #000;
		--color-white: #fff;
		--spacing: 0.25rem;
		--container-sm: 24rem;
		--container-md: 28rem;
		--container-2xl: 42rem;
		--container-3xl: 48rem;
		--container-4xl: 56rem;
		--container-7xl: 80rem;
		--text-xs: 0.75rem;
		--text-xs--line-height: calc(1 / 0.75);
		--text-sm: 0.875rem;
		--text-sm--line-height: calc(1.25 / 0.875);
		--text-base: 1rem;
		--text-base--line-height: calc(1.5 / 1);
		--text-lg: 1.125rem;
		--text-lg--line-height: calc(1.75 / 1.125);
		--text-xl: 1.25rem;
		--text-xl--line-height: calc(1.75 / 1.25);
		--text-2xl: 1.5rem;
		--text-2xl--line-height: calc(2 / 1.5);
		--text-3xl: 1.875rem;
		--text-3xl--line-height: calc(2.25 / 1.875);
		--text-4xl: 2.25rem;
		--text-4xl--line-height: calc(2.5 / 2.25);
		--text-5xl: 3rem;
		--text-5xl--line-height: 1;
		--text-6xl: 3.75rem;
		--text-6xl--line-height: 1;
		--font-weight-normal: 400;
		--font-weight-medium: 500;
		--font-weight-semibold: 600;
		--font-weight-bold: 700;
		--tracking-tight: -0.025em;
		--tracking-wide: 0.025em;
		--tracking-wider: 0.05em;
		--tracking-widest: 0.1em;
		--leading-relaxed: 1.625;
		--radius-xs: 0.125rem;
		--radius-2xl: 1rem;
		--ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
		--animate-spin: spin 1s linear infinite;
		--animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
		--default-transition-duration: 0.15s;
		--default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		--default-font-family: system-ui, -apple-system, sans-serif;
		--default-mono-font-family: var(--font-geist-mono);
	}
	@supports (color: color(display-p3 0 0 0)) {
		:root,
		:host {
			--color-red-50: color(display-p3 0.988669 0.951204 0.950419);
			--color-red-100: color(display-p3 0.980386 0.889727 0.887779);
			--color-red-200: color(display-p3 0.969562 0.798149 0.794299);
			--color-red-300: color(display-p3 0.956922 0.651886 0.645122);
			--color-red-500: color(display-p3 0.903738 0.262579 0.253307);
			--color-red-600: color(display-p3 0.830323 0.140383 0.133196);
			--color-red-700: color(display-p3 0.692737 0.116232 0.104679);
			--color-red-800: color(display-p3 0.569606 0.121069 0.108493);
			--color-red-900: color(display-p3 0.466906 0.133198 0.12139);
			--color-orange-100: color(display-p3 0.988762 0.931393 0.843273);
			--color-orange-200: color(display-p3 0.974647 0.84705 0.680111);
			--color-orange-800: color(display-p3 0.575591 0.21198 0.082665);
			--color-orange-900: color(display-p3 0.457137 0.188093 0.0897628);
			--color-amber-50: color(display-p3 0.997804 0.985047 0.926312);
			--color-amber-600: color(display-p3 0.827144 0.467166 0.0336006);
			--color-yellow-100: color(display-p3 0.993436 0.977463 0.782913);
			--color-yellow-200: color(display-p3 0.988789 0.943116 0.579188);
			--color-yellow-500: color(display-p3 0.903651 0.703062 0.0745389);
			--color-yellow-600: color(display-p3 0.776342 0.542492 0.041709);
			--color-yellow-800: color(display-p3 0.503181 0.30478 0.075537);
			--color-yellow-900: color(display-p3 0.422485 0.252729 0.095052);
			--color-green-50: color(display-p3 0.950677 0.990571 0.959366);
			--color-green-100: color(display-p3 0.885269 0.984329 0.910368);
			--color-green-200: color(display-p3 0.776442 0.964383 0.823412);
			--color-green-500: color(display-p3 0.308734 0.774754 0.374307);
			--color-green-600: color(display-p3 0.243882 0.640824 0.294808);
			--color-green-700: color(display-p3 0.198355 0.501799 0.245335);
			--color-green-800: color(display-p3 0.168568 0.395123 0.211217);
			--color-green-900: color(display-p3 0.147288 0.323577 0.185694);
			--color-blue-50: color(display-p3 0.941826 0.963151 0.995385);
			--color-blue-100: color(display-p3 0.869214 0.915931 0.989622);
			--color-blue-200: color(display-p3 0.76688 0.855207 0.987483);
			--color-blue-500: color(display-p3 0.266422 0.491219 0.988624);
			--color-blue-600: color(display-p3 0.174493 0.358974 0.950247);
			--color-blue-700: color(display-p3 0.1379 0.274983 0.867624);
			--color-blue-800: color(display-p3 0.134023 0.230647 0.695537);
			--color-blue-900: color(display-p3 0.136395 0.219428 0.537145);
			--color-indigo-500: color(display-p3 0.380374 0.372235 0.971707);
			--color-purple-50: color(display-p3 0.977045 0.961759 0.996715);
			--color-purple-100: color(display-p3 0.945034 0.910569 0.992972);
			--color-purple-200: color(display-p3 0.901181 0.835978 0.992237);
			--color-purple-600: color(display-p3 0.546729 0.130167 0.94439);
			--color-purple-800: color(display-p3 0.393513 0.10339 0.664476);
			--color-purple-900: color(display-p3 0.321698 0.107597 0.524563);
			--color-pink-100: color(display-p3 0.974549 0.908208 0.950227);
			--color-pink-200: color(display-p3 0.95913 0.815822 0.905269);
			--color-pink-900: color(display-p3 0.480862 0.117563 0.26009);
			--color-gray-50: color(display-p3 0.977213 0.98084 0.985102);
			--color-gray-100: color(display-p3 0.953567 0.956796 0.964321);
			--color-gray-200: color(display-p3 0.899787 0.906171 0.92106);
			--color-gray-300: color(display-p3 0.822033 0.835264 0.858521);
			--color-gray-400: color(display-p3 0.605734 0.630385 0.680158);
			--color-gray-500: color(display-p3 0.421287 0.446085 0.504784);
			--color-gray-600: color(display-p3 0.297358 0.332176 0.39043);
			--color-gray-700: color(display-p3 0.219968 0.253721 0.318679);
			--color-gray-800: color(display-p3 0.125854 0.159497 0.216835);
			--color-gray-900: color(display-p3 0.070423 0.0928982 0.151928);
		}
	}
	@supports (color: lab(0% 0 0)) {
		:root,
		:host {
			--color-red-50: lab(96.5005% 4.18508 1.52328);
			--color-red-100: lab(92.243% 10.2865 3.83865);
			--color-red-200: lab(86.017% 19.8815 7.75869);
			--color-red-300: lab(76.5514% 36.422 15.5335);
			--color-red-500: lab(55.4814% 75.0732 48.8528);
			--color-red-600: lab(48.4493% 77.4328 61.5452);
			--color-red-700: lab(40.4273% 67.2623 53.7441);
			--color-red-800: lab(33.7174% 55.8993 41.0293);
			--color-red-900: lab(28.5139% 44.5539 29.0463);
			--color-orange-100: lab(94.7127% 3.58394 14.3151);
			--color-orange-200: lab(88.4871% 9.94918 28.8378);
			--color-orange-800: lab(37.1566% 46.6433 50.5562);
			--color-orange-900: lab(30.2951% 36.0434 37.671);
			--color-amber-50: lab(98.6252% -0.635922 8.42309);
			--color-amber-600: lab(60.3514% 40.5624 87.1228);
			--color-yellow-100: lab(97.3564% -4.51407 27.344);
			--color-yellow-200: lab(94.3433% -5.00429 52.9663);
			--color-yellow-500: lab(76.3898% 14.5258 98.4589);
			--color-yellow-600: lab(62.7799% 22.4197 86.1544);
			--color-yellow-800: lab(38.7484% 23.5833 51.4916);
			--color-yellow-900: lab(32.3865% 21.1273 38.5959);
			--color-green-50: lab(98.1563% -5.60117 2.75915);
			--color-green-100: lab(96.1861% -13.8464 6.52365);
			--color-green-200: lab(92.4222% -26.4702 12.9427);
			--color-green-500: lab(70.5521% -66.5147 45.8073);
			--color-green-600: lab(59.0978% -58.6621 41.2579);
			--color-green-700: lab(47.0329% -47.0239 31.4788);
			--color-green-800: lab(37.4616% -36.7971 22.9692);
			--color-green-900: lab(30.797% -29.6927 17.382);
			--color-blue-50: lab(96.492% -1.14644 -5.11479);
			--color-blue-100: lab(92.0301% -2.24757 -11.6453);
			--color-blue-200: lab(86.15% -4.04379 -21.0797);
			--color-blue-500: lab(54.1736% 13.3369 -74.6839);
			--color-blue-600: lab(44.0605% 29.0279 -86.0352);
			--color-blue-700: lab(36.9089% 35.0961 -85.6872);
			--color-blue-800: lab(30.2514% 27.7853 -70.2699);
			--color-blue-900: lab(26.1542% 15.7545 -51.5504);
			--color-indigo-500: lab(48.295% 38.3129 -81.9673);
			--color-purple-50: lab(97.1627% 2.99937 -4.13398);
			--color-purple-100: lab(93.3333% 6.97437 -9.83434);
			--color-purple-200: lab(87.8405% 13.4282 -18.7159);
			--color-purple-600: lab(43.0295% 75.21 -86.5669);
			--color-purple-800: lab(30.6017% 56.7637 -64.4751);
			--color-purple-900: lab(24.9401% 45.2703 -51.2728);
			--color-pink-100: lab(93.5864% 9.01193 -3.15079);
			--color-pink-200: lab(87.4504% 19.6 -6.46662);
			--color-pink-900: lab(29.4367% 49.3962 3.35757);
			--color-gray-50: lab(98.2596% -0.247031 -0.706708);
			--color-gray-100: lab(96.1596% -0.0823438 -1.13575);
			--color-gray-200: lab(91.6229% -0.159115 -2.26791);
			--color-gray-300: lab(85.1236% -0.612259 -3.7138);
			--color-gray-400: lab(65.9269% -0.832707 -8.17473);
			--color-gray-500: lab(47.7841% -0.393182 -10.0268);
			--color-gray-600: lab(35.6337% -1.58697 -10.8425);
			--color-gray-700: lab(27.1134% -0.956401 -12.3224);
			--color-gray-800: lab(16.1051% -1.18239 -11.7533);
			--color-gray-900: lab(8.11897% 0.811279 -12.254);
		}
	}
}
@layer base {
	*,
	:after,
	:before {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	::backdrop {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	::-webkit-file-upload-button {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	::file-selector-button {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	html,
	:host {
		-webkit-text-size-adjust: 100%;
		-moz-tab-size: 4;
		tab-size: 4;
		line-height: 1.5;
		font-family: var(
			--default-font-family,
			ui-sans-serif,
			system-ui,
			sans-serif,
			"Apple Color Emoji",
			"Segoe UI Emoji",
			"Segoe UI Symbol",
			"Noto Color Emoji"
		);
		font-feature-settings: var(--default-font-feature-settings, normal);
		font-variation-settings: var(--default-font-variation-settings, normal);
		-webkit-tap-highlight-color: transparent;
	}
	hr {
		height: 0;
		color: inherit;
		border-top-width: 1px;
	}
	abbr:where([title]) {
		-webkit-text-decoration: underline dotted;
		text-decoration: underline dotted;
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-size: inherit;
		font-weight: inherit;
	}
	a {
		color: inherit;
		-webkit-text-decoration: inherit;
		-webkit-text-decoration: inherit;
		-webkit-text-decoration: inherit;
		-webkit-text-decoration: inherit;
		text-decoration: inherit;
	}
	b,
	strong {
		font-weight: bolder;
	}
	code,
	kbd,
	samp,
	pre {
		font-family: var(
			--default-mono-font-family,
			ui-monospace,
			SFMono-Regular,
			Menlo,
			Monaco,
			Consolas,
			"Liberation Mono",
			"Courier New",
			monospace
		);
		font-feature-settings: var(--default-mono-font-feature-settings, normal);
		font-variation-settings: var(
			--default-mono-font-variation-settings,
			normal
		);
		font-size: 1em;
	}
	small {
		font-size: 80%;
	}
	sub,
	sup {
		vertical-align: baseline;
		font-size: 75%;
		line-height: 0;
		position: relative;
	}
	sub {
		bottom: -0.25em;
	}
	sup {
		top: -0.5em;
	}
	table {
		text-indent: 0;
		border-color: inherit;
		border-collapse: collapse;
	}
	:-moz-focusring {
		outline: auto;
	}
	progress {
		vertical-align: baseline;
	}
	summary {
		display: list-item;
	}
	ol,
	ul,
	menu {
		list-style: none;
	}
	img,
	svg,
	video,
	canvas,
	audio,
	iframe,
	embed,
	object {
		vertical-align: middle;
		display: block;
	}
	img,
	video {
		max-width: 100%;
		height: auto;
	}
	button,
	input,
	select,
	optgroup,
	textarea {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		opacity: 1;
		background-color: transparent;
		border-radius: 0;
	}
	::-webkit-file-upload-button {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		opacity: 1;
		background-color: transparent;
		border-radius: 0;
	}
	::file-selector-button {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		opacity: 1;
		background-color: transparent;
		border-radius: 0;
	}
	:where(select:-webkit-any([multiple], [size])) optgroup {
		font-weight: bolder;
	}
	:where(select:-moz-any([multiple], [size])) optgroup {
		font-weight: bolder;
	}
	:where(select:is([multiple], [size])) optgroup {
		font-weight: bolder;
	}
	:where(select:-webkit-any([multiple], [size]))
		optgroup
		option:not(
			:-webkit-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		padding-left: 20px;
	}
	:where(select:-moz-any([multiple], [size]))
		optgroup
		option:not(
			:-moz-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		padding-left: 20px;
	}
	:where(select:is([multiple], [size]))
		optgroup
		option:not(
			:is(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		padding-left: 20px;
	}
	:where(select:-webkit-any([multiple], [size]))
		optgroup
		option:-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		padding-right: 20px;
	}
	:where(select:-moz-any([multiple], [size]))
		optgroup
		option:-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		padding-right: 20px;
	}
	:where(select:is([multiple], [size]))
		optgroup
		option:is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		padding-right: 20px;
	}
	:not(
			:-webkit-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		)::-webkit-file-upload-button {
		margin-right: 4px;
	}
	:not(
			:-moz-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		)::file-selector-button {
		margin-right: 4px;
	}
	:not(
			:is(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		)::file-selector-button {
		margin-right: 4px;
	}
	:-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::-webkit-file-upload-button {
		margin-left: 4px;
	}
	:-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::file-selector-button {
		margin-left: 4px;
	}
	:is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::file-selector-button {
		margin-left: 4px;
	}
	::placeholder {
		opacity: 1;
	}
	@supports (not ((-webkit-appearance: -apple-pay-button))) or
		(contain-intrinsic-size: 1px) {
		::placeholder {
			color: currentColor;
		}
		@supports (color: color-mix(in lab, red, red)) {
			::placeholder {
				color: color-mix(in oklab, currentcolor 50%, transparent);
			}
		}
	}
	textarea {
		resize: vertical;
	}
	::-webkit-search-decoration {
		-webkit-appearance: none;
	}
	::-webkit-date-and-time-value {
		min-height: 1lh;
		text-align: inherit;
	}
	::-webkit-datetime-edit {
		display: inline-flex;
	}
	::-webkit-datetime-edit-fields-wrapper {
		padding: 0;
	}
	::-webkit-datetime-edit {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-year-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-month-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-day-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-hour-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-minute-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-second-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-millisecond-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-meridiem-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-calendar-picker-indicator {
		line-height: 1;
	}
	:-moz-ui-invalid {
		box-shadow: none;
	}
	button {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	input:where([type="button"], [type="reset"], [type="submit"]) {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	::-webkit-file-upload-button {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	::file-selector-button {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	::-webkit-inner-spin-button {
		height: auto;
	}
	::-webkit-outer-spin-button {
		height: auto;
	}
	[hidden]:where(:not([hidden="until-found"])) {
		display: none !important;
	}
	* {
		border-color: var(--border);
		outline-color: var(--ring);
	}
	@supports (color: color-mix(in lab, red, red)) {
		* {
			outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
		}
	}
	body {
		background-color: var(--background);
		color: var(--foreground);
		font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,
			Noto Sans, Ubuntu, Cantarell, Helvetica Neue, sans-serif;
	}
}
@layer components;
@layer utilities {
	.pointer-events-none {
		pointer-events: none;
	}
	.sr-only {
		clip-path: inset(50%);
		white-space: nowrap;
		border-width: 0;
		width: 1px;
		height: 1px;
		margin: -1px;
		padding: 0;
		position: absolute;
		overflow: hidden;
	}
	.absolute {
		position: absolute;
	}
	.fixed {
		position: fixed;
	}
	.relative {
		position: relative;
	}
	.static {
		position: static;
	}
	.sticky {
		position: -webkit-sticky;
		position: sticky;
	}
	.inset-0 {
		inset: calc(var(--spacing) * 0);
	}
	.inset-x-0 {
		inset-inline: calc(var(--spacing) * 0);
	}
	.inset-y-0 {
		inset-block: calc(var(--spacing) * 0);
	}
	.-top-4 {
		top: calc(var(--spacing) * -4);
	}
	.top-0 {
		top: calc(var(--spacing) * 0);
	}
	.top-0\.5 {
		top: calc(var(--spacing) * 0.5);
	}
	.top-4 {
		top: calc(var(--spacing) * 4);
	}
	.top-full {
		top: 100%;
	}
	.right-0 {
		right: calc(var(--spacing) * 0);
	}
	.right-2 {
		right: calc(var(--spacing) * 2);
	}
	.right-3 {
		right: calc(var(--spacing) * 3);
	}
	.right-4 {
		right: calc(var(--spacing) * 4);
	}
	.bottom-0 {
		bottom: calc(var(--spacing) * 0);
	}
	.bottom-1 {
		bottom: calc(var(--spacing) * 1);
	}
	.bottom-full {
		bottom: 100%;
	}
	.left-0 {
		left: calc(var(--spacing) * 0);
	}
	.left-1\/2 {
		left: 50%;
	}
	.left-3 {
		left: calc(var(--spacing) * 3);
	}
	.left-\[50\%\] {
		left: 50%;
	}
	.z-10 {
		z-index: 10;
	}
	.z-20 {
		z-index: 20;
	}
	.z-30 {
		z-index: 30;
	}
	.z-50 {
		z-index: 50;
	}
	.z-70 {
		z-index: 70;
	}
	.z-99 {
		z-index: 99;
	}
	.-mx-1 {
		margin-inline: calc(var(--spacing) * -1);
	}
	.mx-3 {
		margin-inline: calc(var(--spacing) * 3);
	}
	.mx-4 {
		margin-inline: calc(var(--spacing) * 4);
	}
	.mx-6 {
		margin-inline: calc(var(--spacing) * 6);
	}
	.mx-auto {
		margin-left: auto;
		margin-right: auto;
	}
	.my-1 {
		margin-block: calc(var(--spacing) * 1);
	}
	.my-4 {
		margin-block: calc(var(--spacing) * 4);
	}
	.-mt-2 {
		margin-top: calc(var(--spacing) * -2);
	}
	.-mt-4 {
		margin-top: calc(var(--spacing) * -4);
	}
	.mt-0\.5 {
		margin-top: calc(var(--spacing) * 0.5);
	}
	.mt-1 {
		margin-top: calc(var(--spacing) * 1);
	}
	.mt-2 {
		margin-top: calc(var(--spacing) * 2);
	}
	.mt-3 {
		margin-top: calc(var(--spacing) * 3);
	}
	.mt-4 {
		margin-top: calc(var(--spacing) * 4);
	}
	.mt-6 {
		margin-top: calc(var(--spacing) * 6);
	}
	.mt-8 {
		margin-top: calc(var(--spacing) * 8);
	}
	.mt-auto {
		margin-top: auto;
	}
	.-mr-2 {
		margin-right: calc(var(--spacing) * -2);
	}
	.mr-1 {
		margin-right: calc(var(--spacing) * 1);
	}
	.mr-2 {
		margin-right: calc(var(--spacing) * 2);
	}
	.mr-3 {
		margin-right: calc(var(--spacing) * 3);
	}
	.mr-4 {
		margin-right: calc(var(--spacing) * 4);
	}
	.mb-0 {
		margin-bottom: calc(var(--spacing) * 0);
	}
	.mb-1 {
		margin-bottom: calc(var(--spacing) * 1);
	}
	.mb-2 {
		margin-bottom: calc(var(--spacing) * 2);
	}
	.mb-3 {
		margin-bottom: calc(var(--spacing) * 3);
	}
	.mb-4 {
		margin-bottom: calc(var(--spacing) * 4);
	}
	.mb-6 {
		margin-bottom: calc(var(--spacing) * 6);
	}
	.mb-8 {
		margin-bottom: calc(var(--spacing) * 8);
	}
	.mb-12 {
		margin-bottom: calc(var(--spacing) * 12);
	}
	.mb-16 {
		margin-bottom: calc(var(--spacing) * 16);
	}
	.-ml-1 {
		margin-left: calc(var(--spacing) * -1);
	}
	.ml-1 {
		margin-left: calc(var(--spacing) * 1);
	}
	.ml-2 {
		margin-left: calc(var(--spacing) * 2);
	}
	.ml-3 {
		margin-left: calc(var(--spacing) * 3);
	}
	.ml-4 {
		margin-left: calc(var(--spacing) * 4);
	}
	.ml-auto {
		margin-left: auto;
	}
	.block {
		display: block;
	}
	.flex {
		display: flex;
	}
	.grid {
		display: grid;
	}
	.hidden {
		display: none;
	}
	.inline {
		display: inline;
	}
	.inline-flex {
		display: inline-flex;
	}
	.table {
		display: table;
	}
	.field-sizing-content {
		field-sizing: content;
	}
	.size-2 {
		width: calc(var(--spacing) * 2);
		height: calc(var(--spacing) * 2);
	}
	.size-3\.5 {
		width: calc(var(--spacing) * 3.5);
		height: calc(var(--spacing) * 3.5);
	}
	.size-4 {
		width: calc(var(--spacing) * 4);
		height: calc(var(--spacing) * 4);
	}
	.size-9 {
		width: calc(var(--spacing) * 9);
		height: calc(var(--spacing) * 9);
	}
	.h-1\.5 {
		height: calc(var(--spacing) * 1.5);
	}
	.h-2 {
		height: calc(var(--spacing) * 2);
	}
	.h-3 {
		height: calc(var(--spacing) * 3);
	}
	.h-4 {
		height: calc(var(--spacing) * 4);
	}
	.h-5 {
		height: calc(var(--spacing) * 5);
	}
	.h-6 {
		height: calc(var(--spacing) * 6);
	}
	.h-7\.5 {
		height: calc(var(--spacing) * 7.5);
	}
	.h-8 {
		height: calc(var(--spacing) * 8);
	}
	.h-9 {
		height: calc(var(--spacing) * 9);
	}
	.h-10 {
		height: calc(var(--spacing) * 10);
	}
	.h-12 {
		height: calc(var(--spacing) * 12);
	}
	.h-16 {
		height: calc(var(--spacing) * 16);
	}
	.h-20 {
		height: calc(var(--spacing) * 20);
	}
	.h-24 {
		height: calc(var(--spacing) * 24);
	}
	.h-32 {
		height: calc(var(--spacing) * 32);
	}
	.h-40 {
		height: calc(var(--spacing) * 40);
	}
	.h-80 {
		height: calc(var(--spacing) * 80);
	}
	.h-96 {
		height: calc(var(--spacing) * 96);
	}
	.h-\[32px\] {
		height: 32px;
	}
	.h-\[400px\] {
		height: 400px;
	}
	.h-\[var\(--radix-select-trigger-height\)\] {
		height: var(--radix-select-trigger-height);
	}
	.h-auto {
		height: auto;
	}
	.h-fit {
		height: -moz-fit-content;
		height: fit-content;
	}
	.h-full {
		height: 100%;
	}
	.h-px {
		height: 1px;
	}
	.h-screen {
		height: 100vh;
	}
	.max-h-\(--radix-select-content-available-height\) {
		max-height: var(--radix-select-content-available-height);
	}
	.max-h-96 {
		max-height: calc(var(--spacing) * 96);
	}
	.max-h-\[90vh\] {
		max-height: 90vh;
	}
	.max-h-\[300px\] {
		max-height: 300px;
	}
	.max-h-\[calc\(90vh-120px\)\] {
		max-height: calc(90vh - 120px);
	}
	.min-h-0 {
		min-height: calc(var(--spacing) * 0);
	}
	.min-h-16 {
		min-height: calc(var(--spacing) * 16);
	}
	.min-h-\[40px\] {
		min-height: 40px;
	}
	.min-h-screen {
		min-height: 100vh;
	}
	.w-1\/2 {
		width: 50%;
	}
	.w-1\/3 {
		width: 33.3333%;
	}
	.w-1\/4 {
		width: 25%;
	}
	.w-2 {
		width: calc(var(--spacing) * 2);
	}
	.w-3 {
		width: calc(var(--spacing) * 3);
	}
	.w-3\/4 {
		width: 75%;
	}
	.w-4 {
		width: calc(var(--spacing) * 4);
	}
	.w-5 {
		width: calc(var(--spacing) * 5);
	}
	.w-6 {
		width: calc(var(--spacing) * 6);
	}
	.w-7\.5 {
		width: calc(var(--spacing) * 7.5);
	}
	.w-8 {
		width: calc(var(--spacing) * 8);
	}
	.w-10 {
		width: calc(var(--spacing) * 10);
	}
	.w-12 {
		width: calc(var(--spacing) * 12);
	}
	.w-16 {
		width: calc(var(--spacing) * 16);
	}
	.w-20 {
		width: calc(var(--spacing) * 20);
	}
	.w-24 {
		width: calc(var(--spacing) * 24);
	}
	.w-32 {
		width: calc(var(--spacing) * 32);
	}
	.w-40 {
		width: calc(var(--spacing) * 40);
	}
	.w-48 {
		width: calc(var(--spacing) * 48);
	}
	.w-64 {
		width: calc(var(--spacing) * 64);
	}
	.w-72 {
		width: calc(var(--spacing) * 72);
	}
	.w-80 {
		width: calc(var(--spacing) * 80);
	}
	.w-96 {
		width: calc(var(--spacing) * 96);
	}
	.w-\[32px\] {
		width: 32px;
	}
	.w-\[200px\] {
		width: 200px;
	}
	.w-\[500px\] {
		width: 500px;
	}
	.w-\[var\(--radix-popover-trigger-width\)\] {
		width: var(--radix-popover-trigger-width);
	}
	.w-auto {
		width: auto;
	}
	.w-fit {
		width: -moz-fit-content;
		width: fit-content;
	}
	.w-full {
		width: 100%;
	}
	.max-w-0 {
		max-width: calc(var(--spacing) * 0);
	}
	.max-w-2xl {
		max-width: var(--container-2xl);
	}
	.max-w-3\/4 {
		max-width: 75%;
	}
	.max-w-3xl {
		max-width: var(--container-3xl);
	}
	.max-w-4xl {
		max-width: var(--container-4xl);
	}
	.max-w-7xl {
		max-width: var(--container-7xl);
	}
	.max-w-96 {
		max-width: calc(var(--spacing) * 96);
	}
	.max-w-\[70\%\] {
		max-width: 70%;
	}
	.max-w-\[500px\] {
		max-width: 500px;
	}
	.max-w-\[1064px\] {
		max-width: 1064px;
	}
	.max-w-\[1320px\] {
		max-width: 1320px;
	}
	.max-w-fit {
		max-width: -moz-fit-content;
		max-width: fit-content;
	}
	.max-w-full {
		max-width: 100%;
	}
	.max-w-md {
		max-width: var(--container-md);
	}
	.max-w-none {
		max-width: none;
	}
	.min-w-0 {
		min-width: calc(var(--spacing) * 0);
	}
	.min-w-\[8rem\] {
		min-width: 8rem;
	}
	.min-w-\[var\(--radix-select-trigger-width\)\] {
		min-width: var(--radix-select-trigger-width);
	}
	.min-w-full {
		min-width: 100%;
	}
	.flex-1 {
		flex: 1;
	}
	.flex-shrink-0,
	.shrink-0 {
		flex-shrink: 0;
	}
	.border-collapse {
		border-collapse: collapse;
	}
	.origin-\(--radix-popover-content-transform-origin\) {
		transform-origin: var(--radix-popover-content-transform-origin);
	}
	.origin-\(--radix-select-content-transform-origin\) {
		transform-origin: var(--radix-select-content-transform-origin);
	}
	.origin-\(--radix-tooltip-content-transform-origin\) {
		transform-origin: var(--radix-tooltip-content-transform-origin);
	}
	.-translate-x-1\/2 {
		--tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.translate-x-\[-50\%\] {
		--tw-translate-x: -50%;
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.-translate-y-2 {
		--tw-translate-y: calc(var(--spacing) * -2);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.-translate-y-4 {
		--tw-translate-y: calc(var(--spacing) * -4);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.translate-y-0 {
		--tw-translate-y: calc(var(--spacing) * 0);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.translate-y-4 {
		--tw-translate-y: calc(var(--spacing) * 4);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.translate-y-\[-2px\] {
		--tw-translate-y: -2px;
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.scale-105 {
		--tw-scale-x: 105%;
		--tw-scale-y: 105%;
		--tw-scale-z: 105%;
		scale: var(--tw-scale-x) var(--tw-scale-y);
	}
	.scale-y-95 {
		--tw-scale-y: 95%;
		scale: var(--tw-scale-x) var(--tw-scale-y);
	}
	.scale-y-100 {
		--tw-scale-y: 100%;
		scale: var(--tw-scale-x) var(--tw-scale-y);
	}
	.transform {
		transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
			var(--tw-skew-x) var(--tw-skew-y);
	}
	.animate-in {
		animation: enter var(--tw-animation-duration, var(--tw-duration, 0.15s))
			var(--tw-ease, ease) var(--tw-animation-delay, 0s)
			var(--tw-animation-iteration-count, 1)
			var(--tw-animation-direction, normal) var(--tw-animation-fill-mode, none);
	}
	.animate-pulse {
		animation: var(--animate-pulse);
	}
	.animate-spin {
		animation: var(--animate-spin);
	}
	.cursor-default {
		cursor: default;
	}
	.cursor-not-allowed {
		cursor: not-allowed;
	}
	.cursor-pointer {
		cursor: pointer;
	}
	.resize {
		resize: both;
	}
	.resize-none {
		resize: none;
	}
	.scroll-my-1 {
		scroll-margin-block: calc(var(--spacing) * 1);
	}
	.scroll-py-1 {
		scroll-padding-block: calc(var(--spacing) * 1);
	}
	.list-decimal {
		list-style-type: decimal;
	}
	.list-disc {
		list-style-type: disc;
	}
	.grid-cols-1 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-2 {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}
	.grid-cols-3 {
		grid-template-columns: repeat(3, minmax(0, 1fr));
	}
	.grid-cols-4 {
		grid-template-columns: repeat(4, minmax(0, 1fr));
	}
	.flex-col {
		flex-direction: column;
	}
	.flex-col-reverse {
		flex-direction: column-reverse;
	}
	.flex-row {
		flex-direction: row;
	}
	.flex-wrap {
		flex-wrap: wrap;
	}
	.items-baseline {
		align-items: baseline;
	}
	.items-center {
		align-items: center;
	}
	.items-start {
		align-items: flex-start;
	}
	.justify-between {
		justify-content: space-between;
	}
	.justify-center {
		justify-content: center;
	}
	.justify-end {
		justify-content: flex-end;
	}
	.justify-start {
		justify-content: flex-start;
	}
	.justify-items-center {
		justify-items: center;
	}
	.gap-0 {
		gap: calc(var(--spacing) * 0);
	}
	.gap-1 {
		gap: calc(var(--spacing) * 1);
	}
	.gap-1\.5 {
		gap: calc(var(--spacing) * 1.5);
	}
	.gap-2 {
		gap: calc(var(--spacing) * 2);
	}
	.gap-3 {
		gap: calc(var(--spacing) * 3);
	}
	.gap-4 {
		gap: calc(var(--spacing) * 4);
	}
	.gap-6 {
		gap: calc(var(--spacing) * 6);
	}
	.gap-8 {
		gap: calc(var(--spacing) * 8);
	}
	:where(.space-y-1 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-top: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
		margin-bottom: calc(
			calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-2 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-top: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
		margin-bottom: calc(
			calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-3 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-top: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
		margin-bottom: calc(
			calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-4 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-top: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
		margin-bottom: calc(
			calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-6 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-top: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
		margin-bottom: calc(
			calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-8 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-top: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
		margin-bottom: calc(
			calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse))
		);
	}
	.gap-x-4 {
		column-gap: calc(var(--spacing) * 4);
	}
	:where(.space-x-1 > :not(:last-child)) {
		--tw-space-x-reverse: 0;
	}
	:where(.space-x-1 > :not(:last-child)):not(
			:-webkit-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-1 > :not(:last-child)):not(
			:-moz-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-1 > :not(:last-child)):not(
			:is(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-1 > :not(:last-child)):-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-1 > :not(:last-child)):-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-1 > :not(:last-child)):is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-2 > :not(:last-child)) {
		--tw-space-x-reverse: 0;
	}
	:where(.space-x-2 > :not(:last-child)):not(
			:-webkit-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-2 > :not(:last-child)):not(
			:-moz-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-2 > :not(:last-child)):not(
			:is(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-2 > :not(:last-child)):-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-2 > :not(:last-child)):-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-2 > :not(:last-child)):is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-3 > :not(:last-child)) {
		--tw-space-x-reverse: 0;
	}
	:where(.space-x-3 > :not(:last-child)):not(
			:-webkit-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-3 > :not(:last-child)):not(
			:-moz-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-3 > :not(:last-child)):not(
			:is(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-3 > :not(:last-child)):-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-3 > :not(:last-child)):-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-3 > :not(:last-child)):is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-4 > :not(:last-child)) {
		--tw-space-x-reverse: 0;
	}
	:where(.space-x-4 > :not(:last-child)):not(
			:-webkit-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-4 > :not(:last-child)):not(
			:-moz-any(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-4 > :not(:last-child)):not(
			:is(
					:lang(ae),
					:lang(ar),
					:lang(arc),
					:lang(bcc),
					:lang(bqi),
					:lang(ckb),
					:lang(dv),
					:lang(fa),
					:lang(glk),
					:lang(he),
					:lang(ku),
					:lang(mzn),
					:lang(nqo),
					:lang(pnb),
					:lang(ps),
					:lang(sd),
					:lang(ug),
					:lang(ur),
					:lang(yi)
				)
		) {
		margin-left: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
		margin-right: calc(
			calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-4 > :not(:last-child)):-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-4 > :not(:last-child)):-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	:where(.space-x-4 > :not(:last-child)):is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-right: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
		margin-left: calc(
			calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
		);
	}
	.gap-y-6 {
		row-gap: calc(var(--spacing) * 6);
	}
	:where(.divide-y > :not(:last-child)) {
		--tw-divide-y-reverse: 0;
		border-bottom-style: var(--tw-border-style);
		border-top-style: var(--tw-border-style);
		border-top-width: calc(1px * var(--tw-divide-y-reverse));
		border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
	}
	:where(.divide-gray-100 > :not(:last-child)) {
		border-color: var(--color-gray-100);
	}
	:where(.divide-gray-200 > :not(:last-child)) {
		border-color: var(--color-gray-200);
	}
	.truncate {
		text-overflow: ellipsis;
		white-space: nowrap;
		overflow: hidden;
	}
	.overflow-auto {
		overflow: auto;
	}
	.overflow-hidden {
		overflow: hidden;
	}
	.overflow-x-auto {
		overflow-x: auto;
	}
	.overflow-x-hidden {
		overflow-x: hidden;
	}
	.overflow-y-auto {
		overflow-y: auto;
	}
	.rounded {
		border-radius: 0.25rem;
	}
	.rounded-2xl {
		border-radius: var(--radius-2xl);
	}
	.rounded-full {
		border-radius: 3.40282e38px;
	}
	.rounded-lg {
		border-radius: var(--radius);
	}
	.rounded-md {
		border-radius: calc(var(--radius) - 2px);
	}
	.rounded-none {
		border-radius: 0;
	}
	.rounded-sm {
		border-radius: calc(var(--radius) - 4px);
	}
	.rounded-xl {
		border-radius: calc(var(--radius) + 4px);
	}
	.rounded-xs {
		border-radius: var(--radius-xs);
	}
	.rounded-t-none {
		border-top-left-radius: 0;
		border-top-right-radius: 0;
	}
	.rounded-l-none {
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;
	}
	.rounded-r-none {
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;
	}
	.rounded-b-lg {
		border-bottom-right-radius: var(--radius);
		border-bottom-left-radius: var(--radius);
	}
	.rounded-b-none {
		border-bottom-right-radius: 0;
		border-bottom-left-radius: 0;
	}
	.border {
		border-style: var(--tw-border-style);
		border-width: 1px;
	}
	.border-2 {
		border-style: var(--tw-border-style);
		border-width: 2px;
	}
	.border-4 {
		border-style: var(--tw-border-style);
		border-width: 4px;
	}
	.border-y {
		border-block-style: var(--tw-border-style);
		border-top-width: 1px;
		border-bottom-width: 1px;
	}
	.border-t {
		border-top-style: var(--tw-border-style);
		border-top-width: 1px;
	}
	.border-r {
		border-right-style: var(--tw-border-style);
		border-right-width: 1px;
	}
	.border-r-2 {
		border-right-style: var(--tw-border-style);
		border-right-width: 2px;
	}
	.border-b {
		border-bottom-style: var(--tw-border-style);
		border-bottom-width: 1px;
	}
	.border-b-2 {
		border-bottom-style: var(--tw-border-style);
		border-bottom-width: 2px;
	}
	.border-l {
		border-left-style: var(--tw-border-style);
		border-left-width: 1px;
	}
	.border-l-0 {
		border-left-style: var(--tw-border-style);
		border-left-width: 0;
	}
	.border-l-4 {
		border-left-style: var(--tw-border-style);
		border-left-width: 4px;
	}
	.border-dashed {
		--tw-border-style: dashed;
		border-style: dashed;
	}
	.border-black {
		border-color: var(--color-black);
	}
	.border-black\/30 {
		border-color: rgba(0, 0, 0, 0.3);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.border-black\/30 {
			border-color: color-mix(in oklab, var(--color-black) 30%, transparent);
		}
	}
	.border-blue-200 {
		border-color: var(--color-blue-200);
	}
	.border-blue-700 {
		border-color: var(--color-blue-700);
	}
	.border-border {
		border-color: var(--border);
	}
	.border-gray-100 {
		border-color: var(--color-gray-100);
	}
	.border-gray-200 {
		border-color: var(--color-gray-200);
	}
	.border-gray-300 {
		border-color: var(--color-gray-300);
	}
	.border-green-200 {
		border-color: var(--color-green-200);
	}
	.border-green-500 {
		border-color: var(--color-green-500);
	}
	.border-input {
		border-color: var(--input);
	}
	.border-orange-200 {
		border-color: var(--color-orange-200);
	}
	.border-pink-200 {
		border-color: var(--color-pink-200);
	}
	.border-purple-200 {
		border-color: var(--color-purple-200);
	}
	.border-red-200 {
		border-color: var(--color-red-200);
	}
	.border-red-500 {
		border-color: var(--color-red-500);
	}
	.border-transparent {
		border-color: transparent;
	}
	.border-white {
		border-color: var(--color-white);
	}
	.border-yellow-200 {
		border-color: var(--color-yellow-200);
	}
	.border-yellow-500 {
		border-color: var(--color-yellow-500);
	}
	.bg-\[\#F1F0E8\] {
		background-color: #f1f0e8;
	}
	.bg-amber-50 {
		background-color: var(--color-amber-50);
	}
	.bg-background {
		background-color: var(--background);
	}
	.bg-black {
		background-color: var(--color-black);
	}
	.bg-black\/50 {
		background-color: rgba(0, 0, 0, 0.5);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-black\/50 {
			background-color: color-mix(
				in oklab,
				var(--color-black) 50%,
				transparent
			);
		}
	}
	.bg-blue-50 {
		background-color: var(--color-blue-50);
	}
	.bg-blue-100 {
		background-color: var(--color-blue-100);
	}
	.bg-blue-600 {
		background-color: var(--color-blue-600);
	}
	.bg-border {
		background-color: var(--border);
	}
	.bg-destructive {
		background-color: var(--destructive);
	}
	.bg-foreground {
		background-color: var(--foreground);
	}
	.bg-gray-50 {
		background-color: var(--color-gray-50);
	}
	.bg-gray-100 {
		background-color: var(--color-gray-100);
	}
	.bg-gray-200 {
		background-color: var(--color-gray-200);
	}
	.bg-gray-300 {
		background-color: var(--color-gray-300);
	}
	.bg-gray-400 {
		background-color: var(--color-gray-400);
	}
	.bg-gray-600 {
		background-color: var(--color-gray-600);
	}
	.bg-gray-700 {
		background-color: var(--color-gray-700);
	}
	.bg-gray-800 {
		background-color: var(--color-gray-800);
	}
	.bg-green-50 {
		background-color: var(--color-green-50);
	}
	.bg-green-100 {
		background-color: var(--color-green-100);
	}
	.bg-green-200 {
		background-color: var(--color-green-200);
	}
	.bg-green-500 {
		background-color: var(--color-green-500);
	}
	.bg-green-600 {
		background-color: var(--color-green-600);
	}
	.bg-orange-100 {
		background-color: var(--color-orange-100);
	}
	.bg-pink-100 {
		background-color: var(--color-pink-100);
	}
	.bg-popover {
		background-color: var(--popover);
	}
	.bg-primary {
		background-color: var(--primary);
	}
	.bg-purple-50 {
		background-color: var(--color-purple-50);
	}
	.bg-purple-100 {
		background-color: var(--color-purple-100);
	}
	.bg-purple-600 {
		background-color: var(--color-purple-600);
	}
	.bg-red-50 {
		background-color: var(--color-red-50);
	}
	.bg-red-100 {
		background-color: var(--color-red-100);
	}
	.bg-red-200 {
		background-color: var(--color-red-200);
	}
	.bg-red-500 {
		background-color: var(--color-red-500);
	}
	.bg-secondary {
		background-color: var(--secondary);
	}
	.bg-transparent {
		background-color: transparent;
	}
	.bg-white {
		background-color: var(--color-white);
	}
	.bg-white\/5 {
		background-color: rgba(255, 255, 255, 0.05);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-white\/5 {
			background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
		}
	}
	.bg-white\/8 {
		background-color: rgba(255, 255, 255, 0.08);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-white\/8 {
			background-color: color-mix(in oklab, var(--color-white) 8%, transparent);
		}
	}
	.bg-white\/10 {
		background-color: rgba(255, 255, 255, 0.1);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-white\/10 {
			background-color: color-mix(
				in oklab,
				var(--color-white) 10%,
				transparent
			);
		}
	}
	.bg-white\/12 {
		background-color: rgba(255, 255, 255, 0.12);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-white\/12 {
			background-color: color-mix(
				in oklab,
				var(--color-white) 12%,
				transparent
			);
		}
	}
	.bg-white\/15 {
		background-color: rgba(255, 255, 255, 0.15);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-white\/15 {
			background-color: color-mix(
				in oklab,
				var(--color-white) 15%,
				transparent
			);
		}
	}
	.bg-white\/20 {
		background-color: rgba(255, 255, 255, 0.2);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-white\/20 {
			background-color: color-mix(
				in oklab,
				var(--color-white) 20%,
				transparent
			);
		}
	}
	.bg-white\/25 {
		background-color: rgba(255, 255, 255, 0.25);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-white\/25 {
			background-color: color-mix(
				in oklab,
				var(--color-white) 25%,
				transparent
			);
		}
	}
	.bg-white\/30 {
		background-color: rgba(255, 255, 255, 0.3);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-white\/30 {
			background-color: color-mix(
				in oklab,
				var(--color-white) 30%,
				transparent
			);
		}
	}
	.bg-yellow-100 {
		background-color: var(--color-yellow-100);
	}
	.bg-yellow-500 {
		background-color: var(--color-yellow-500);
	}
	.bg-gradient-to-br {
		--tw-gradient-position: to bottom right in oklab;
		background-image: linear-gradient(var(--tw-gradient-stops));
	}
	.bg-gradient-to-l {
		--tw-gradient-position: to left in oklab;
		background-image: linear-gradient(var(--tw-gradient-stops));
	}
	.bg-gradient-to-r {
		--tw-gradient-position: to right in oklab;
		background-image: linear-gradient(var(--tw-gradient-stops));
	}
	.from-\[\#F1F0E8\] {
		--tw-gradient-from: #f1f0e8;
		--tw-gradient-stops: var(
			--tw-gradient-via-stops,
			var(--tw-gradient-position),
			var(--tw-gradient-from) var(--tw-gradient-from-position),
			var(--tw-gradient-to) var(--tw-gradient-to-position)
		);
	}
	.from-gray-50 {
		--tw-gradient-from: var(--color-gray-50);
		--tw-gradient-stops: var(
			--tw-gradient-via-stops,
			var(--tw-gradient-position),
			var(--tw-gradient-from) var(--tw-gradient-from-position),
			var(--tw-gradient-to) var(--tw-gradient-to-position)
		);
	}
	.to-gray-100 {
		--tw-gradient-to: var(--color-gray-100);
		--tw-gradient-stops: var(
			--tw-gradient-via-stops,
			var(--tw-gradient-position),
			var(--tw-gradient-from) var(--tw-gradient-from-position),
			var(--tw-gradient-to) var(--tw-gradient-to-position)
		);
	}
	.to-transparent {
		--tw-gradient-to: transparent;
		--tw-gradient-stops: var(
			--tw-gradient-via-stops,
			var(--tw-gradient-position),
			var(--tw-gradient-from) var(--tw-gradient-from-position),
			var(--tw-gradient-to) var(--tw-gradient-to-position)
		);
	}
	.object-contain {
		object-fit: contain;
	}
	.object-cover {
		object-fit: cover;
	}
	.p-0 {
		padding: calc(var(--spacing) * 0);
	}
	.p-1 {
		padding: calc(var(--spacing) * 1);
	}
	.p-2 {
		padding: calc(var(--spacing) * 2);
	}
	.p-3 {
		padding: calc(var(--spacing) * 3);
	}
	.p-4 {
		padding: calc(var(--spacing) * 4);
	}
	.p-6 {
		padding: calc(var(--spacing) * 6);
	}
	.p-8 {
		padding: calc(var(--spacing) * 8);
	}
	.px-1 {
		padding-inline: calc(var(--spacing) * 1);
	}
	.px-2 {
		padding-inline: calc(var(--spacing) * 2);
	}
	.px-2\.5 {
		padding-inline: calc(var(--spacing) * 2.5);
	}
	.px-3 {
		padding-inline: calc(var(--spacing) * 3);
	}
	.px-4 {
		padding-inline: calc(var(--spacing) * 4);
	}
	.px-6 {
		padding-inline: calc(var(--spacing) * 6);
	}
	.px-8 {
		padding-inline: calc(var(--spacing) * 8);
	}
	.px-\[6px\] {
		padding-left: 6px;
		padding-right: 6px;
	}
	.py-0\.5 {
		padding-block: calc(var(--spacing) * 0.5);
	}
	.py-1 {
		padding-block: calc(var(--spacing) * 1);
	}
	.py-1\.5 {
		padding-block: calc(var(--spacing) * 1.5);
	}
	.py-2 {
		padding-block: calc(var(--spacing) * 2);
	}
	.py-3 {
		padding-block: calc(var(--spacing) * 3);
	}
	.py-4 {
		padding-block: calc(var(--spacing) * 4);
	}
	.py-6 {
		padding-block: calc(var(--spacing) * 6);
	}
	.py-8 {
		padding-block: calc(var(--spacing) * 8);
	}
	.py-12 {
		padding-block: calc(var(--spacing) * 12);
	}
	.py-16 {
		padding-block: calc(var(--spacing) * 16);
	}
	.py-20 {
		padding-block: calc(var(--spacing) * 20);
	}
	.py-\[5px\] {
		padding-top: 5px;
		padding-bottom: 5px;
	}
	.pt-2 {
		padding-top: calc(var(--spacing) * 2);
	}
	.pt-3 {
		padding-top: calc(var(--spacing) * 3);
	}
	.pt-4 {
		padding-top: calc(var(--spacing) * 4);
	}
	.pt-6 {
		padding-top: calc(var(--spacing) * 6);
	}
	.pt-\[15vh\] {
		padding-top: 15vh;
	}
	.pr-3 {
		padding-right: calc(var(--spacing) * 3);
	}
	.pr-8 {
		padding-right: calc(var(--spacing) * 8);
	}
	.pr-12 {
		padding-right: calc(var(--spacing) * 12);
	}
	.pb-2 {
		padding-bottom: calc(var(--spacing) * 2);
	}
	.pb-3 {
		padding-bottom: calc(var(--spacing) * 3);
	}
	.pb-4 {
		padding-bottom: calc(var(--spacing) * 4);
	}
	.pl-2 {
		padding-left: calc(var(--spacing) * 2);
	}
	.pl-3 {
		padding-left: calc(var(--spacing) * 3);
	}
	.pl-4 {
		padding-left: calc(var(--spacing) * 4);
	}
	.pl-10 {
		padding-left: calc(var(--spacing) * 10);
	}
	.text-center {
		text-align: center;
	}
	.text-left {
		text-align: left;
	}
	.text-right {
		text-align: right;
	}
	.font-geist {
		font-family: Geist Mono, SF Mono, Monaco, Inconsolata, Roboto Mono,
			Oxygen Mono, Ubuntu Monospace, Source Code Pro, Fira Mono, Droid Sans Mono,
			Courier New, monospace;
	}
	.font-mono {
		font-family: var(--font-geist-mono);
	}
	.text-2xl {
		font-size: var(--text-2xl);
		line-height: var(--tw-leading, var(--text-2xl--line-height));
	}
	.text-3xl {
		font-size: var(--text-3xl);
		line-height: var(--tw-leading, var(--text-3xl--line-height));
	}
	.text-4xl {
		font-size: var(--text-4xl);
		line-height: var(--tw-leading, var(--text-4xl--line-height));
	}
	.text-6xl {
		font-size: var(--text-6xl);
		line-height: var(--tw-leading, var(--text-6xl--line-height));
	}
	.text-base {
		font-size: var(--text-base);
		line-height: var(--tw-leading, var(--text-base--line-height));
	}
	.text-lg {
		font-size: var(--text-lg);
		line-height: var(--tw-leading, var(--text-lg--line-height));
	}
	.text-sm {
		font-size: var(--text-sm);
		line-height: var(--tw-leading, var(--text-sm--line-height));
	}
	.text-xl {
		font-size: var(--text-xl);
		line-height: var(--tw-leading, var(--text-xl--line-height));
	}
	.text-xs {
		font-size: var(--text-xs);
		line-height: var(--tw-leading, var(--text-xs--line-height));
	}
	.text-\[15px\] {
		font-size: 15px;
	}
	.leading-none {
		--tw-leading: 1;
		line-height: 1;
	}
	.leading-relaxed {
		--tw-leading: var(--leading-relaxed);
		line-height: var(--leading-relaxed);
	}
	.font-bold {
		--tw-font-weight: var(--font-weight-bold);
		font-weight: var(--font-weight-bold);
	}
	.font-medium {
		--tw-font-weight: var(--font-weight-medium);
		font-weight: var(--font-weight-medium);
	}
	.font-normal {
		--tw-font-weight: var(--font-weight-normal);
		font-weight: var(--font-weight-normal);
	}
	.font-semibold {
		--tw-font-weight: var(--font-weight-semibold);
		font-weight: var(--font-weight-semibold);
	}
	.tracking-tight {
		--tw-tracking: var(--tracking-tight);
		letter-spacing: var(--tracking-tight);
	}
	.tracking-wide {
		--tw-tracking: var(--tracking-wide);
		letter-spacing: var(--tracking-wide);
	}
	.tracking-wider {
		--tw-tracking: var(--tracking-wider);
		letter-spacing: var(--tracking-wider);
	}
	.tracking-widest {
		--tw-tracking: var(--tracking-widest);
		letter-spacing: var(--tracking-widest);
	}
	.text-balance {
		text-wrap: balance;
	}
	.break-words {
		overflow-wrap: break-word;
	}
	.whitespace-nowrap {
		white-space: nowrap;
	}
	.whitespace-pre-wrap {
		white-space: pre-wrap;
	}
	.text-amber-600 {
		color: var(--color-amber-600);
	}
	.text-background {
		color: var(--background);
	}
	.text-black {
		color: var(--color-black);
	}
	.text-blue-500 {
		color: var(--color-blue-500);
	}
	.text-blue-600 {
		color: var(--color-blue-600);
	}
	.text-blue-700 {
		color: var(--color-blue-700);
	}
	.text-blue-800 {
		color: var(--color-blue-800);
	}
	.text-blue-900 {
		color: var(--color-blue-900);
	}
	.text-foreground {
		color: var(--foreground);
	}
	.text-gray-100 {
		color: var(--color-gray-100);
	}
	.text-gray-300 {
		color: var(--color-gray-300);
	}
	.text-gray-400 {
		color: var(--color-gray-400);
	}
	.text-gray-500 {
		color: var(--color-gray-500);
	}
	.text-gray-600 {
		color: var(--color-gray-600);
	}
	.text-gray-700 {
		color: var(--color-gray-700);
	}
	.text-gray-800 {
		color: var(--color-gray-800);
	}
	.text-gray-900 {
		color: var(--color-gray-900);
	}
	.text-green-600 {
		color: var(--color-green-600);
	}
	.text-green-700 {
		color: var(--color-green-700);
	}
	.text-green-800 {
		color: var(--color-green-800);
	}
	.text-green-900 {
		color: var(--color-green-900);
	}
	.text-muted-foreground {
		color: var(--muted-foreground);
	}
	.text-orange-800 {
		color: var(--color-orange-800);
	}
	.text-orange-900 {
		color: var(--color-orange-900);
	}
	.text-pink-900 {
		color: var(--color-pink-900);
	}
	.text-popover-foreground {
		color: var(--popover-foreground);
	}
	.text-primary {
		color: var(--primary);
	}
	.text-primary-foreground {
		color: var(--primary-foreground);
	}
	.text-purple-600 {
		color: var(--color-purple-600);
	}
	.text-purple-800 {
		color: var(--color-purple-800);
	}
	.text-purple-900 {
		color: var(--color-purple-900);
	}
	.text-red-500 {
		color: var(--color-red-500);
	}
	.text-red-600 {
		color: var(--color-red-600);
	}
	.text-red-700 {
		color: var(--color-red-700);
	}
	.text-red-800 {
		color: var(--color-red-800);
	}
	.text-red-900 {
		color: var(--color-red-900);
	}
	.text-secondary-foreground {
		color: var(--secondary-foreground);
	}
	.text-white {
		color: var(--color-white);
	}
	.text-yellow-600 {
		color: var(--color-yellow-600);
	}
	.text-yellow-800 {
		color: var(--color-yellow-800);
	}
	.text-yellow-900 {
		color: var(--color-yellow-900);
	}
	.lowercase {
		text-transform: lowercase;
	}
	.uppercase {
		text-transform: uppercase;
	}
	.italic {
		font-style: italic;
	}
	.underline {
		-webkit-text-decoration-line: underline;
		text-decoration-line: underline;
	}
	.underline-offset-4 {
		text-underline-offset: 4px;
	}
	.antialiased {
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}
	.placeholder-gray-500::placeholder {
		color: var(--color-gray-500);
	}
	.accent-black {
		accent-color: var(--color-black);
	}
	.opacity-0 {
		opacity: 0;
	}
	.opacity-50 {
		opacity: 0.5;
	}
	.opacity-70 {
		opacity: 0.7;
	}
	.opacity-75 {
		opacity: 0.75;
	}
	.opacity-80 {
		opacity: 0.8;
	}
	.opacity-100 {
		opacity: 1;
	}
	.opacity-\[0\.95\] {
		opacity: 0.95;
	}
	.shadow {
		--tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, 0.1)),
			0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, 0.1));
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.shadow-2xl {
		--tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgba(0, 0, 0, 0.25));
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.shadow-lg {
		--tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, 0.1)),
			0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, 0.1));
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.shadow-md {
		--tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgba(0, 0, 0, 0.1)),
			0 2px 4px -2px var(--tw-shadow-color, rgba(0, 0, 0, 0.1));
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.shadow-sm {
		--tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, 0.1)),
			0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, 0.1));
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.shadow-xs {
		--tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgba(0, 0, 0, 0.05));
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.ring-offset-background {
		--tw-ring-offset-color: var(--background);
	}
	.outline-hidden {
		--tw-outline-style: none;
		outline-style: none;
	}
	@media (forced-colors: active) {
		.outline-hidden {
			outline-offset: 2px;
			outline: 2px solid transparent;
		}
	}
	.outline {
		outline-style: var(--tw-outline-style);
		outline-width: 1px;
	}
	.filter {
		filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
			var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
			var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
	}
	.transition {
		transition-property: color, background-color, border-color, outline-color,
			-webkit-text-decoration-color, text-decoration-color, fill, stroke,
			--tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity,
			box-shadow, transform, translate, scale, rotate, filter,
			-webkit-backdrop-filter, backdrop-filter, display, content-visibility,
			overlay, pointer-events;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.transition-\[color\,box-shadow\] {
		transition-property: color, box-shadow;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.transition-all {
		transition-property: all;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.transition-colors {
		transition-property: color, background-color, border-color, outline-color,
			-webkit-text-decoration-color, text-decoration-color, fill, stroke,
			--tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.transition-opacity {
		transition-property: opacity;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.transition-transform {
		transition-property: transform, translate, scale, rotate;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.duration-200 {
		--tw-duration: 0.2s;
		transition-duration: 0.2s;
	}
	.duration-300 {
		--tw-duration: 0.3s;
		transition-duration: 0.3s;
	}
	.duration-500 {
		--tw-duration: 0.5s;
		transition-duration: 0.5s;
	}
	.duration-\[400ms\] {
		--tw-duration: 0.4s;
		transition-duration: 0.4s;
	}
	.ease-in-out {
		--tw-ease: var(--ease-in-out);
		transition-timing-function: var(--ease-in-out);
	}
	.fade-in-0 {
		--tw-enter-opacity: 0;
	}
	.outline-none {
		--tw-outline-style: none;
		outline-style: none;
	}
	.select-none {
		-webkit-user-select: none;
		-moz-user-select: none;
		user-select: none;
	}
	.zoom-in-95 {
		--tw-enter-scale: 0.95;
	}
	.running {
		animation-play-state: running;
	}
	@media (hover: hover) {
		.group-hover\:translate-x-1:is(:where(.group):hover *) {
			--tw-translate-x: calc(var(--spacing) * 1);
			translate: var(--tw-translate-x) var(--tw-translate-y);
		}
		.group-hover\:scale-150:is(:where(.group):hover *) {
			--tw-scale-x: 150%;
			--tw-scale-y: 150%;
			--tw-scale-z: 150%;
			scale: var(--tw-scale-x) var(--tw-scale-y);
		}
		.group-hover\:opacity-100:is(:where(.group):hover *) {
			opacity: 1;
		}
	}
	.selection\:bg-primary ::selection,
	.selection\:bg-primary::selection {
		background-color: var(--primary);
	}
	.selection\:text-primary-foreground ::selection,
	.selection\:text-primary-foreground::selection {
		color: var(--primary-foreground);
	}
	.file\:inline-flex::-webkit-file-upload-button {
		display: inline-flex;
	}
	.file\:inline-flex::file-selector-button {
		display: inline-flex;
	}
	.file\:h-7::-webkit-file-upload-button {
		height: calc(var(--spacing) * 7);
	}
	.file\:h-7::file-selector-button {
		height: calc(var(--spacing) * 7);
	}
	.file\:border-0::-webkit-file-upload-button {
		border-style: var(--tw-border-style);
		border-width: 0;
	}
	.file\:border-0::file-selector-button {
		border-style: var(--tw-border-style);
		border-width: 0;
	}
	.file\:bg-transparent::-webkit-file-upload-button {
		background-color: transparent;
	}
	.file\:bg-transparent::file-selector-button {
		background-color: transparent;
	}
	.file\:text-sm::-webkit-file-upload-button {
		font-size: var(--text-sm);
		line-height: var(--tw-leading, var(--text-sm--line-height));
	}
	.file\:text-sm::file-selector-button {
		font-size: var(--text-sm);
		line-height: var(--tw-leading, var(--text-sm--line-height));
	}
	.file\:font-medium::-webkit-file-upload-button {
		--tw-font-weight: var(--font-weight-medium);
		font-weight: var(--font-weight-medium);
	}
	.file\:font-medium::file-selector-button {
		--tw-font-weight: var(--font-weight-medium);
		font-weight: var(--font-weight-medium);
	}
	.file\:text-foreground::-webkit-file-upload-button {
		color: var(--foreground);
	}
	.file\:text-foreground::file-selector-button {
		color: var(--foreground);
	}
	.placeholder\:text-gray-300::placeholder {
		color: var(--color-gray-300);
	}
	.placeholder\:text-gray-400::placeholder {
		color: var(--color-gray-400);
	}
	.placeholder\:text-muted-foreground::placeholder {
		color: var(--muted-foreground);
	}
	.first\:rounded-t-md:first-child {
		border-top-left-radius: calc(var(--radius) - 2px);
		border-top-right-radius: calc(var(--radius) - 2px);
	}
	.last\:rounded-b-md:last-child {
		border-bottom-right-radius: calc(var(--radius) - 2px);
		border-bottom-left-radius: calc(var(--radius) - 2px);
	}
	.last\:border-b-0:last-child {
		border-bottom-style: var(--tw-border-style);
		border-bottom-width: 0;
	}
	@media (hover: hover) {
		.hover\:translate-y-\[-1px\]:hover {
			--tw-translate-y: -1px;
			translate: var(--tw-translate-x) var(--tw-translate-y);
		}
		.hover\:scale-105:hover {
			--tw-scale-x: 105%;
			--tw-scale-y: 105%;
			--tw-scale-z: 105%;
			scale: var(--tw-scale-x) var(--tw-scale-y);
		}
		.hover\:scale-110:hover {
			--tw-scale-x: 110%;
			--tw-scale-y: 110%;
			--tw-scale-z: 110%;
			scale: var(--tw-scale-x) var(--tw-scale-y);
		}
		.hover\:border-black\/50:hover {
			border-color: rgba(0, 0, 0, 0.5);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.hover\:border-black\/50:hover {
				border-color: color-mix(in oklab, var(--color-black) 50%, transparent);
			}
		}
		.hover\:border-gray-300:hover {
			border-color: var(--color-gray-300);
		}
		.hover\:border-gray-400:hover {
			border-color: var(--color-gray-400);
		}
		.hover\:border-red-300:hover {
			border-color: var(--color-red-300);
		}
		.hover\:bg-accent:hover {
			background-color: var(--accent);
		}
		.hover\:bg-blue-700:hover {
			background-color: var(--color-blue-700);
		}
		.hover\:bg-destructive\/90:hover {
			background-color: var(--destructive);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.hover\:bg-destructive\/90:hover {
				background-color: color-mix(
					in oklab,
					var(--destructive) 90%,
					transparent
				);
			}
		}
		.hover\:bg-gray-50:hover {
			background-color: var(--color-gray-50);
		}
		.hover\:bg-gray-100:hover {
			background-color: var(--color-gray-100);
		}
		.hover\:bg-gray-200:hover {
			background-color: var(--color-gray-200);
		}
		.hover\:bg-gray-700:hover {
			background-color: var(--color-gray-700);
		}
		.hover\:bg-gray-800:hover {
			background-color: var(--color-gray-800);
		}
		.hover\:bg-green-200:hover {
			background-color: var(--color-green-200);
		}
		.hover\:bg-green-700:hover {
			background-color: var(--color-green-700);
		}
		.hover\:bg-orange-200:hover {
			background-color: var(--color-orange-200);
		}
		.hover\:bg-primary\/90:hover {
			background-color: var(--primary);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.hover\:bg-primary\/90:hover {
				background-color: color-mix(in oklab, var(--primary) 90%, transparent);
			}
		}
		.hover\:bg-red-50:hover {
			background-color: var(--color-red-50);
		}
		.hover\:bg-red-100:hover {
			background-color: var(--color-red-100);
		}
		.hover\:bg-secondary\/80:hover {
			background-color: var(--secondary);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.hover\:bg-secondary\/80:hover {
				background-color: color-mix(
					in oklab,
					var(--secondary) 80%,
					transparent
				);
			}
		}
		.hover\:text-accent-foreground:hover {
			color: var(--accent-foreground);
		}
		.hover\:text-blue-800:hover {
			color: var(--color-blue-800);
		}
		.hover\:text-gray-200:hover {
			color: var(--color-gray-200);
		}
		.hover\:text-gray-600:hover {
			color: var(--color-gray-600);
		}
		.hover\:text-gray-700:hover {
			color: var(--color-gray-700);
		}
		.hover\:text-gray-800:hover {
			color: var(--color-gray-800);
		}
		.hover\:text-gray-900:hover {
			color: var(--color-gray-900);
		}
		.hover\:text-red-500:hover {
			color: var(--color-red-500);
		}
		.hover\:text-red-600:hover {
			color: var(--color-red-600);
		}
		.hover\:underline:hover {
			-webkit-text-decoration-line: underline;
			text-decoration-line: underline;
		}
		.hover\:opacity-80:hover {
			opacity: 0.8;
		}
		.hover\:opacity-100:hover {
			opacity: 1;
		}
	}
	.focus\:border-black:focus {
		border-color: var(--color-black);
	}
	.focus\:border-blue-500:focus {
		border-color: var(--color-blue-500);
	}
	.focus\:border-red-500:focus {
		border-color: var(--color-red-500);
	}
	.focus\:border-transparent:focus {
		border-color: transparent;
	}
	.focus\:bg-accent:focus {
		background-color: var(--accent);
	}
	.focus\:text-accent-foreground:focus {
		color: var(--accent-foreground);
	}
	.focus\:ring-2:focus {
		--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
			calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.focus\:ring-black:focus {
		--tw-ring-color: var(--color-black);
	}
	.focus\:ring-blue-500:focus {
		--tw-ring-color: var(--color-blue-500);
	}
	.focus\:ring-indigo-500:focus {
		--tw-ring-color: var(--color-indigo-500);
	}
	.focus\:ring-red-500:focus {
		--tw-ring-color: var(--color-red-500);
	}
	.focus\:ring-ring:focus {
		--tw-ring-color: var(--ring);
	}
	.focus\:ring-offset-2:focus {
		--tw-ring-offset-width: 2px;
		--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
			var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	}
	.focus\:outline-hidden:focus {
		--tw-outline-style: none;
		outline-style: none;
	}
	@media (forced-colors: active) {
		.focus\:outline-hidden:focus {
			outline-offset: 2px;
			outline: 2px solid transparent;
		}
	}
	.focus\:outline-none:focus {
		--tw-outline-style: none;
		outline-style: none;
	}
	.focus-visible\:border-ring:focus-visible {
		border-color: var(--ring);
	}
	.focus-visible\:ring-2:focus-visible {
		--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
			calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.focus-visible\:ring-\[2px\]:focus-visible {
		--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
			calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.focus-visible\:ring-\[3px\]:focus-visible {
		--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
			calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.focus-visible\:ring-black:focus-visible {
		--tw-ring-color: var(--color-black);
	}
	.focus-visible\:ring-black\/30:focus-visible {
		--tw-ring-color: rgba(0, 0, 0, 0.3);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.focus-visible\:ring-black\/30:focus-visible {
			--tw-ring-color: color-mix(in oklab, var(--color-black) 30%, transparent);
		}
	}
	.focus-visible\:ring-destructive\/20:focus-visible {
		--tw-ring-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.focus-visible\:ring-destructive\/20:focus-visible {
			--tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
		}
	}
	.focus-visible\:ring-ring:focus-visible {
		--tw-ring-color: var(--ring);
	}
	.focus-visible\:ring-ring\/50:focus-visible {
		--tw-ring-color: var(--ring);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.focus-visible\:ring-ring\/50:focus-visible {
			--tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
		}
	}
	.focus-visible\:ring-offset-2:focus-visible {
		--tw-ring-offset-width: 2px;
		--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
			var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	}
	.focus-visible\:outline-none:focus-visible {
		--tw-outline-style: none;
		outline-style: none;
	}
	.disabled\:pointer-events-none:disabled {
		pointer-events: none;
	}
	.disabled\:cursor-not-allowed:disabled {
		cursor: not-allowed;
	}
	.disabled\:bg-gray-400:disabled {
		background-color: var(--color-gray-400);
	}
	.disabled\:opacity-50:disabled {
		opacity: 0.5;
	}
	.has-\[\>svg\]\:px-2\.5:has(> svg) {
		padding-inline: calc(var(--spacing) * 2.5);
	}
	.has-\[\>svg\]\:px-3:has(> svg) {
		padding-inline: calc(var(--spacing) * 3);
	}
	.has-\[\>svg\]\:px-4:has(> svg) {
		padding-inline: calc(var(--spacing) * 4);
	}
	.aria-invalid\:border-destructive[aria-invalid="true"] {
		border-color: var(--destructive);
	}
	.aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
		--tw-ring-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
			--tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
		}
	}
	.data-\[disabled\]\:pointer-events-none[data-disabled] {
		pointer-events: none;
	}
	.data-\[disabled\]\:opacity-50[data-disabled] {
		opacity: 0.5;
	}
	.data-\[disabled\=true\]\:pointer-events-none[data-disabled="true"] {
		pointer-events: none;
	}
	.data-\[disabled\=true\]\:opacity-50[data-disabled="true"] {
		opacity: 0.5;
	}
	.data-\[placeholder\]\:text-muted-foreground[data-placeholder] {
		color: var(--muted-foreground);
	}
	.data-\[selected\=true\]\:bg-accent[data-selected="true"] {
		background-color: var(--accent);
	}
	.data-\[selected\=true\]\:text-accent-foreground[data-selected="true"] {
		color: var(--accent-foreground);
	}
	.data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
		--tw-translate-y: calc(var(--spacing) * 1);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
		--tw-enter-translate-y: calc(var(--spacing) * 2 * -1);
	}
	.data-\[side\=left\]\:-translate-x-1[data-side="left"] {
		--tw-translate-x: calc(var(--spacing) * -1);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
		--tw-enter-translate-x: calc(var(--spacing) * 2);
	}
	.data-\[side\=right\]\:translate-x-1[data-side="right"] {
		--tw-translate-x: calc(var(--spacing) * 1);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
		--tw-enter-translate-x: calc(var(--spacing) * 2 * -1);
	}
	.data-\[side\=top\]\:-translate-y-1[data-side="top"] {
		--tw-translate-y: calc(var(--spacing) * -1);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
		--tw-enter-translate-y: calc(var(--spacing) * 2);
	}
	.data-\[size\=default\]\:h-9[data-size="default"] {
		height: calc(var(--spacing) * 9);
	}
	.data-\[size\=sm\]\:h-8[data-size="sm"] {
		height: calc(var(--spacing) * 8);
	}
	:is(
			.\*\*\:data-\[slot\=command-input-wrapper\]\:h-12 *
		)[data-slot="command-input-wrapper"] {
		height: calc(var(--spacing) * 12);
	}
	:is(
			.\*\:data-\[slot\=select-value\]\:line-clamp-1 > *
		)[data-slot="select-value"] {
		-webkit-line-clamp: 1;
		-webkit-box-orient: vertical;
		display: -webkit-box;
		overflow: hidden;
	}
	:is(.\*\:data-\[slot\=select-value\]\:flex > *)[data-slot="select-value"] {
		display: flex;
	}
	:is(
			.\*\:data-\[slot\=select-value\]\:items-center > *
		)[data-slot="select-value"] {
		align-items: center;
	}
	:is(.\*\:data-\[slot\=select-value\]\:gap-2 > *)[data-slot="select-value"] {
		gap: calc(var(--spacing) * 2);
	}
	.data-\[state\=active\]\:bg-gray-100[data-state="active"] {
		background-color: var(--color-gray-100);
	}
	.data-\[state\=active\]\:bg-gray-900[data-state="active"] {
		background-color: var(--color-gray-900);
	}
	.data-\[state\=active\]\:text-gray-900[data-state="active"] {
		color: var(--color-gray-900);
	}
	.data-\[state\=active\]\:text-white[data-state="active"] {
		color: var(--color-white);
	}
	.data-\[state\=active\]\:shadow-sm[data-state="active"] {
		--tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, 0.1)),
			0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, 0.1));
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.data-\[state\=closed\]\:animate-out[data-state="closed"] {
		animation: exit var(--tw-animation-duration, var(--tw-duration, 0.15s))
			var(--tw-ease, ease) var(--tw-animation-delay, 0s)
			var(--tw-animation-iteration-count, 1)
			var(--tw-animation-direction, normal) var(--tw-animation-fill-mode, none);
	}
	.data-\[state\=closed\]\:duration-300[data-state="closed"] {
		--tw-duration: 0.3s;
		transition-duration: 0.3s;
	}
	.data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
		--tw-exit-opacity: 0;
	}
	.data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
		--tw-exit-scale: 0.95;
	}
	.data-\[state\=closed\]\:slide-out-to-bottom[data-state="closed"] {
		--tw-exit-translate-y: 100%;
	}
	.data-\[state\=closed\]\:slide-out-to-left[data-state="closed"] {
		--tw-exit-translate-x: -100%;
	}
	.data-\[state\=closed\]\:slide-out-to-right[data-state="closed"] {
		--tw-exit-translate-x: 100%;
	}
	.data-\[state\=closed\]\:slide-out-to-top[data-state="closed"] {
		--tw-exit-translate-y: -100%;
	}
	.data-\[state\=open\]\:animate-in[data-state="open"] {
		animation: enter var(--tw-animation-duration, var(--tw-duration, 0.15s))
			var(--tw-ease, ease) var(--tw-animation-delay, 0s)
			var(--tw-animation-iteration-count, 1)
			var(--tw-animation-direction, normal) var(--tw-animation-fill-mode, none);
	}
	.data-\[state\=open\]\:bg-accent[data-state="open"] {
		background-color: var(--accent);
	}
	.data-\[state\=open\]\:bg-secondary[data-state="open"] {
		background-color: var(--secondary);
	}
	.data-\[state\=open\]\:text-muted-foreground[data-state="open"] {
		color: var(--muted-foreground);
	}
	.data-\[state\=open\]\:duration-500[data-state="open"] {
		--tw-duration: 0.5s;
		transition-duration: 0.5s;
	}
	.data-\[state\=open\]\:fade-in-0[data-state="open"] {
		--tw-enter-opacity: 0;
	}
	.data-\[state\=open\]\:zoom-in-95[data-state="open"] {
		--tw-enter-scale: 0.95;
	}
	.data-\[state\=open\]\:slide-in-from-bottom[data-state="open"] {
		--tw-enter-translate-y: 100%;
	}
	.data-\[state\=open\]\:slide-in-from-left[data-state="open"] {
		--tw-enter-translate-x: -100%;
	}
	.data-\[state\=open\]\:slide-in-from-right[data-state="open"] {
		--tw-enter-translate-x: 100%;
	}
	.data-\[state\=open\]\:slide-in-from-top[data-state="open"] {
		--tw-enter-translate-y: -100%;
	}
	@media (min-width: 40rem) {
		.sm\:top-\[50\%\] {
			top: 50%;
		}
		.sm\:inline {
			display: inline;
		}
		.sm\:h-\[500px\] {
			height: 500px;
		}
		.sm\:w-16 {
			width: calc(var(--spacing) * 16);
		}
		.sm\:w-\[600px\] {
			width: 600px;
		}
		.sm\:max-w-\[500px\] {
			max-width: 500px;
		}
		.sm\:max-w-sm {
			max-width: var(--container-sm);
		}
		.sm\:translate-y-\[-50\%\] {
			--tw-translate-y: -50%;
			translate: var(--tw-translate-x) var(--tw-translate-y);
		}
		.sm\:grid-cols-2 {
			grid-template-columns: repeat(2, minmax(0, 1fr));
		}
		.sm\:flex-row {
			flex-direction: row;
		}
		.sm\:items-center {
			align-items: center;
		}
		.sm\:justify-between {
			justify-content: space-between;
		}
		.sm\:justify-end {
			justify-content: flex-end;
		}
		.sm\:gap-8 {
			gap: calc(var(--spacing) * 8);
		}
		.sm\:p-6 {
			padding: calc(var(--spacing) * 6);
		}
		.sm\:px-6 {
			padding-inline: calc(var(--spacing) * 6);
		}
		.sm\:text-left {
			text-align: left;
		}
		.sm\:text-2xl {
			font-size: var(--text-2xl);
			line-height: var(--tw-leading, var(--text-2xl--line-height));
		}
		.sm\:text-4xl {
			font-size: var(--text-4xl);
			line-height: var(--tw-leading, var(--text-4xl--line-height));
		}
		.sm\:text-5xl {
			font-size: var(--text-5xl);
			line-height: var(--tw-leading, var(--text-5xl--line-height));
		}
		.sm\:text-lg {
			font-size: var(--text-lg);
			line-height: var(--tw-leading, var(--text-lg--line-height));
		}
		.sm\:text-sm {
			font-size: var(--text-sm);
			line-height: var(--tw-leading, var(--text-sm--line-height));
		}
	}
	@media (min-width: 48rem) {
		.md\:block {
			display: block;
		}
		.md\:flex {
			display: flex;
		}
		.md\:hidden {
			display: none;
		}
		.md\:grid-cols-2 {
			grid-template-columns: repeat(2, minmax(0, 1fr));
		}
		.md\:grid-cols-3 {
			grid-template-columns: repeat(3, minmax(0, 1fr));
		}
		.md\:grid-rows-2 {
			grid-template-rows: repeat(2, minmax(0, 1fr));
		}
		.md\:text-sm {
			font-size: var(--text-sm);
			line-height: var(--tw-leading, var(--text-sm--line-height));
		}
	}
	@media (min-width: 64rem) {
		.lg\:col-span-2 {
			grid-column: span 2 / span 2;
		}
		.lg\:block {
			display: block;
		}
		.lg\:grid-cols-2 {
			grid-template-columns: repeat(2, minmax(0, 1fr));
		}
		.lg\:grid-cols-3 {
			grid-template-columns: repeat(3, minmax(0, 1fr));
		}
		.lg\:px-8 {
			padding-inline: calc(var(--spacing) * 8);
		}
		.lg\:text-6xl {
			font-size: var(--text-6xl);
			line-height: var(--tw-leading, var(--text-6xl--line-height));
		}
	}
	.dark\:border-input:is(.dark *) {
		border-color: var(--input);
	}
	.dark\:bg-destructive\/60:is(.dark *) {
		background-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:bg-destructive\/60:is(.dark *) {
			background-color: color-mix(
				in oklab,
				var(--destructive) 60%,
				transparent
			);
		}
	}
	.dark\:bg-input\/30:is(.dark *) {
		background-color: var(--input);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:bg-input\/30:is(.dark *) {
			background-color: color-mix(in oklab, var(--input) 30%, transparent);
		}
	}
	@media (hover: hover) {
		.dark\:hover\:bg-accent\/50:is(.dark *):hover {
			background-color: var(--accent);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.dark\:hover\:bg-accent\/50:is(.dark *):hover {
				background-color: color-mix(in oklab, var(--accent) 50%, transparent);
			}
		}
		.dark\:hover\:bg-input\/50:is(.dark *):hover {
			background-color: var(--input);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.dark\:hover\:bg-input\/50:is(.dark *):hover {
				background-color: color-mix(in oklab, var(--input) 50%, transparent);
			}
		}
	}
	.dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
		--tw-ring-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
			--tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
		}
	}
	.dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
		--tw-ring-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
			--tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
		}
	}
	.\[\&_\[cmdk-group-heading\]\]\:px-2 [cmdk-group-heading] {
		padding-inline: calc(var(--spacing) * 2);
	}
	.\[\&_\[cmdk-group-heading\]\]\:py-1\.5 [cmdk-group-heading] {
		padding-block: calc(var(--spacing) * 1.5);
	}
	.\[\&_\[cmdk-group-heading\]\]\:text-xs [cmdk-group-heading] {
		font-size: var(--text-xs);
		line-height: var(--tw-leading, var(--text-xs--line-height));
	}
	.\[\&_\[cmdk-group-heading\]\]\:font-medium [cmdk-group-heading] {
		--tw-font-weight: var(--font-weight-medium);
		font-weight: var(--font-weight-medium);
	}
	.\[\&_\[cmdk-group-heading\]\]\:text-muted-foreground [cmdk-group-heading] {
		color: var(--muted-foreground);
	}
	.\[\&_\[cmdk-group\]\]\:px-2 [cmdk-group] {
		padding-inline: calc(var(--spacing) * 2);
	}
	.\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0
		[cmdk-group]:not([hidden])
		~ [cmdk-group] {
		padding-top: calc(var(--spacing) * 0);
	}
	.\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 [cmdk-input-wrapper] svg {
		height: calc(var(--spacing) * 5);
	}
	.\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 [cmdk-input-wrapper] svg {
		width: calc(var(--spacing) * 5);
	}
	.\[\&_\[cmdk-input\]\]\:h-12 [cmdk-input] {
		height: calc(var(--spacing) * 12);
	}
	.\[\&_\[cmdk-item\]\]\:px-2 [cmdk-item] {
		padding-inline: calc(var(--spacing) * 2);
	}
	.\[\&_\[cmdk-item\]\]\:py-3 [cmdk-item] {
		padding-block: calc(var(--spacing) * 3);
	}
	.\[\&_\[cmdk-item\]_svg\]\:h-5 [cmdk-item] svg {
		height: calc(var(--spacing) * 5);
	}
	.\[\&_\[cmdk-item\]_svg\]\:w-5 [cmdk-item] svg {
		width: calc(var(--spacing) * 5);
	}
	.\[\&_li\:\:marker\]\:font-semibold li::marker {
		--tw-font-weight: var(--font-weight-semibold);
		font-weight: var(--font-weight-semibold);
	}
	.\[\&_svg\]\:pointer-events-none svg {
		pointer-events: none;
	}
	.\[\&_svg\]\:shrink-0 svg {
		flex-shrink: 0;
	}
	.\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
		width: calc(var(--spacing) * 4);
		height: calc(var(--spacing) * 4);
	}
	.\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground
		svg:not([class*="text-"]) {
		color: var(--muted-foreground);
	}
	:-webkit-any(.\*\:\[span\]\:last\:flex > *):-webkit-any(span):last-child {
		display: flex;
	}
	:-moz-any(.\*\:\[span\]\:last\:flex > *):-moz-any(span):last-child {
		display: flex;
	}
	:is(.\*\:\[span\]\:last\:flex > *):is(span):last-child {
		display: flex;
	}
	:-webkit-any(.\*\:\[span\]\:last\:items-center > *):-webkit-any(
			span
		):last-child {
		align-items: center;
	}
	:-moz-any(.\*\:\[span\]\:last\:items-center > *):-moz-any(span):last-child {
		align-items: center;
	}
	:is(.\*\:\[span\]\:last\:items-center > *):is(span):last-child {
		align-items: center;
	}
	:-webkit-any(.\*\:\[span\]\:last\:gap-2 > *):-webkit-any(span):last-child {
		gap: calc(var(--spacing) * 2);
	}
	:-moz-any(.\*\:\[span\]\:last\:gap-2 > *):-moz-any(span):last-child {
		gap: calc(var(--spacing) * 2);
	}
	:is(.\*\:\[span\]\:last\:gap-2 > *):is(span):last-child {
		gap: calc(var(--spacing) * 2);
	}
}
@property --tw-animation-delay {
	syntax: "*";
	inherits: false;
	initial-value: 0s;
}
@property --tw-animation-direction {
	syntax: "*";
	inherits: false;
	initial-value: normal;
}
@property --tw-animation-duration {
	syntax: "*";
	inherits: false;
}
@property --tw-animation-fill-mode {
	syntax: "*";
	inherits: false;
	initial-value: none;
}
@property --tw-animation-iteration-count {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-enter-blur {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-enter-opacity {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-enter-rotate {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-enter-scale {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-enter-translate-x {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-enter-translate-y {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-exit-blur {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-exit-opacity {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-exit-rotate {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-exit-scale {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-exit-translate-x {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-exit-translate-y {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@font-face {
	font-family: Clash Grotesk;
	src: url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Extralight.woff2)
			format("woff2"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Extralight.woff) format("woff"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Extralight.ttf) format("truetype");
	font-weight: 200;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Clash Grotesk;
	src: url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Light.woff2) format("woff2"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Light.woff) format("woff"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Light.ttf) format("truetype");
	font-weight: 300;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Clash Grotesk;
	src: url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Regular.woff2) format("woff2"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Regular.woff) format("woff"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Regular.ttf) format("truetype");
	font-weight: 400;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Clash Grotesk;
	src: url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Medium.woff2) format("woff2"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Medium.woff) format("woff"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Medium.ttf) format("truetype");
	font-weight: 500;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Clash Grotesk;
	src: url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Semibold.woff2) format("woff2"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Semibold.woff) format("woff"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Semibold.ttf) format("truetype");
	font-weight: 600;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Clash Grotesk;
	src: url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Bold.woff2) format("woff2"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Bold.woff) format("woff"),
		url(/Clash-Grotesk/WEB/fonts/ClashGrotesk-Bold.ttf) format("truetype");
	font-weight: 700;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Iowan Old Style;
	src: url(/iowanoldst-bt/bitstream-iowan-old-style-bt-586c36a8d7712.ttf)
		format("truetype");
	font-weight: 400;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Iowan Old Style;
	src: url(/iowanoldst-bt/bitstream-iowan-old-style-italic-bt-586c3740dc396.ttf)
		format("truetype");
	font-weight: 400;
	font-display: swap;
	font-style: italic;
}
@font-face {
	font-family: Iowan Old Style;
	src: url(/iowanoldst-bt/bitstream-iowan-old-style-bold-bt-586c371d8d669.ttf)
		format("truetype");
	font-weight: 700;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Iowan Old Style;
	src: url(/iowanoldst-bt/bitstream-iowan-old-style-bold-italic-bt-586c37701cb62.ttf)
		format("truetype");
	font-weight: 700;
	font-display: swap;
	font-style: italic;
}
@font-face {
	font-family: Iowan Old Style;
	src: url(/iowanoldst-bt/bitstream-iowan-old-style-black-bt-586c36e930225.ttf)
		format("truetype");
	font-weight: 900;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Iowan Old Style;
	src: url(/iowanoldst-bt/bitstream-iowan-old-style-black-italic-bt-586c378f12ca1.ttf)
		format("truetype");
	font-weight: 900;
	font-display: swap;
	font-style: italic;
}
@font-face {
	font-family: Geist Mono;
	src: url(/Geist_Mono/GeistMono-VariableFont_wght.ttf) format("truetype");
	font-weight: 100 900;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Geist Mono;
	src: url(/Geist_Mono/static/GeistMono-Thin.ttf) format("truetype");
	font-weight: 100;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Geist Mono;
	src: url(/Geist_Mono/static/GeistMono-ExtraLight.ttf) format("truetype");
	font-weight: 200;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Geist Mono;
	src: url(/Geist_Mono/static/GeistMono-Light.ttf) format("truetype");
	font-weight: 300;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Geist Mono;
	src: url(/Geist_Mono/static/GeistMono-Regular.ttf) format("truetype");
	font-weight: 400;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Geist Mono;
	src: url(/Geist_Mono/static/GeistMono-Medium.ttf) format("truetype");
	font-weight: 500;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Geist Mono;
	src: url(/Geist_Mono/static/GeistMono-SemiBold.ttf) format("truetype");
	font-weight: 600;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Geist Mono;
	src: url(/Geist_Mono/static/GeistMono-Bold.ttf) format("truetype");
	font-weight: 700;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Geist Mono;
	src: url(/Geist_Mono/static/GeistMono-ExtraBold.ttf) format("truetype");
	font-weight: 800;
	font-display: swap;
	font-style: normal;
}
@font-face {
	font-family: Geist Mono;
	src: url(/Geist_Mono/static/GeistMono-Black.ttf) format("truetype");
	font-weight: 900;
	font-display: swap;
	font-style: normal;
}
:root {
	--background: #fff;
	--foreground: #0a0a0a;
	--main-blue: #124d7a;
	--orange-gold: #7a3f12;
	--teal-green: #127a66;
	--coral: #7a123f;
	--radius: 0.625rem;
	--card: #fff;
	--card-foreground: #0a0a0a;
	--popover: #fff;
	--popover-foreground: #0a0a0a;
	--primary: #171717;
	--primary-foreground: #fafafa;
	--secondary: #f5f5f5;
	--secondary-foreground: #171717;
	--muted: #f5f5f5;
	--muted-foreground: #737373;
	--accent: #f5f5f5;
	--accent-foreground: #171717;
	--destructive: #e40014;
	--border: #e5e5e5;
	--input: #e5e5e5;
	--ring: #a1a1a1;
	--chart-1: #f05100;
	--chart-2: #009588;
	--chart-3: #104e64;
	--chart-4: #fcbb00;
	--chart-5: #f99c00;
	--sidebar: #fafafa;
	--sidebar-foreground: #0a0a0a;
	--sidebar-primary: #171717;
	--sidebar-primary-foreground: #fafafa;
	--sidebar-accent: #f5f5f5;
	--sidebar-accent-foreground: #171717;
	--sidebar-border: #e5e5e5;
	--sidebar-ring: #a1a1a1;
}
@supports (color: color(display-p3 0 0 0)) {
	:root {
		--background: color(display-p3 1 1 1);
		--foreground: color(display-p3 0.0393882 0.0393882 0.0393882);
		--card: color(display-p3 1 1 1);
		--card-foreground: color(display-p3 0.0393882 0.0393882 0.0393882);
		--popover: color(display-p3 1 1 1);
		--popover-foreground: color(display-p3 0.0393882 0.0393882 0.0393882);
		--primary: color(display-p3 0.0905274 0.0905274 0.0905274);
		--primary-foreground: color(display-p3 0.980256 0.980256 0.980256);
		--secondary: color(display-p3 0.960587 0.960587 0.960587);
		--secondary-foreground: color(display-p3 0.0905274 0.0905274 0.0905274);
		--muted: color(display-p3 0.960587 0.960587 0.960587);
		--muted-foreground: color(display-p3 0.451519 0.451519 0.451519);
		--accent: color(display-p3 0.960587 0.960587 0.960587);
		--accent-foreground: color(display-p3 0.0905274 0.0905274 0.0905274);
		--destructive: color(display-p3 0.830323 0.140383 0.133196);
		--border: color(display-p3 0.898161 0.898161 0.898161);
		--input: color(display-p3 0.898161 0.898161 0.898161);
		--ring: color(display-p3 0.630163 0.630163 0.630163);
		--chart-1: color(display-p3 0.887467 0.341665 0.0219962);
		--chart-2: color(display-p3 0.207114 0.579584 0.53668);
		--chart-3: color(display-p3 0.142586 0.302008 0.385094);
		--chart-4: color(display-p3 0.959186 0.738519 0.118268);
		--chart-5: color(display-p3 0.93994 0.620584 0.0585367);
		--sidebar: color(display-p3 0.980256 0.980256 0.980256);
		--sidebar-foreground: color(display-p3 0.0393882 0.0393882 0.0393882);
		--sidebar-primary: color(display-p3 0.0905274 0.0905274 0.0905274);
		--sidebar-primary-foreground: color(display-p3 0.980256 0.980256 0.980256);
		--sidebar-accent: color(display-p3 0.960587 0.960587 0.960587);
		--sidebar-accent-foreground: color(
			display-p3 0.0905274 0.0905274 0.0905274
		);
		--sidebar-border: color(display-p3 0.898161 0.898161 0.898161);
		--sidebar-ring: color(display-p3 0.630163 0.630163 0.630163);
	}
}
@supports (color: lab(0% 0 0)) {
	:root {
		--background: lab(100% 0 0);
		--foreground: lab(2.75381% 0 0);
		--card: lab(100% 0 0);
		--card-foreground: lab(2.75381% 0 0);
		--popover: lab(100% 0 0);
		--popover-foreground: lab(2.75381% 0 0);
		--primary: lab(7.78201% -0.0000149012 0);
		--primary-foreground: lab(98.26% 0 0);
		--secondary: lab(96.52% -0.0000298023 0.0000119209);
		--secondary-foreground: lab(7.78201% -0.0000149012 0);
		--muted: lab(96.52% -0.0000298023 0.0000119209);
		--muted-foreground: lab(48.496% 0 0);
		--accent: lab(96.52% -0.0000298023 0.0000119209);
		--accent-foreground: lab(7.78201% -0.0000149012 0);
		--destructive: lab(48.4493% 77.4328 61.5452);
		--border: lab(90.952% 0 -0.0000119209);
		--input: lab(90.952% 0 -0.0000119209);
		--ring: lab(66.128% -0.0000298023 0.0000119209);
		--chart-1: lab(57.1026% 64.2584 89.8886);
		--chart-2: lab(55.0223% -41.0774 -3.90277);
		--chart-3: lab(30.372% -13.1853 -18.7887);
		--chart-4: lab(80.1641% 16.6016 99.2089);
		--chart-5: lab(72.7183% 31.8672 97.9407);
		--sidebar: lab(98.26% 0 0);
		--sidebar-foreground: lab(2.75381% 0 0);
		--sidebar-primary: lab(7.78201% -0.0000149012 0);
		--sidebar-primary-foreground: lab(98.26% 0 0);
		--sidebar-accent: lab(96.52% -0.0000298023 0.0000119209);
		--sidebar-accent-foreground: lab(7.78201% -0.0000149012 0);
		--sidebar-border: lab(90.952% 0 -0.0000119209);
		--sidebar-ring: lab(66.128% -0.0000298023 0.0000119209);
	}
}
.dark {
	--background: #0a0a0a;
	--foreground: #fafafa;
	--card: #171717;
	--card-foreground: #fafafa;
	--popover: #171717;
	--popover-foreground: #fafafa;
	--primary: #e5e5e5;
	--primary-foreground: #171717;
	--secondary: #262626;
	--secondary-foreground: #fafafa;
	--muted: #262626;
	--muted-foreground: #a1a1a1;
	--accent: #262626;
	--accent-foreground: #fafafa;
	--destructive: #ff6568;
	--border: rgba(255, 255, 255, 0.1);
	--input: rgba(255, 255, 255, 0.15);
	--ring: #737373;
	--chart-1: #1447e6;
	--chart-2: #00bb7f;
	--chart-3: #f99c00;
	--chart-4: #ac4bff;
	--chart-5: #ff2357;
	--sidebar: #171717;
	--sidebar-foreground: #fafafa;
	--sidebar-primary: #1447e6;
	--sidebar-primary-foreground: #fafafa;
	--sidebar-accent: #262626;
	--sidebar-accent-foreground: #fafafa;
	--sidebar-border: rgba(255, 255, 255, 0.1);
	--sidebar-ring: #737373;
}
@supports (color: color(display-p3 0 0 0)) {
	.dark {
		--background: color(display-p3 0.0393882 0.0393882 0.0393882);
		--foreground: color(display-p3 0.980256 0.980256 0.980256);
		--card: color(display-p3 0.0905274 0.0905274 0.0905274);
		--card-foreground: color(display-p3 0.980256 0.980256 0.980256);
		--popover: color(display-p3 0.0905274 0.0905274 0.0905274);
		--popover-foreground: color(display-p3 0.980256 0.980256 0.980256);
		--primary: color(display-p3 0.898161 0.898161 0.898161);
		--primary-foreground: color(display-p3 0.0905274 0.0905274 0.0905274);
		--secondary: color(display-p3 0.149382 0.149382 0.149382);
		--secondary-foreground: color(display-p3 0.980256 0.980256 0.980256);
		--muted: color(display-p3 0.149382 0.149382 0.149382);
		--muted-foreground: color(display-p3 0.630163 0.630163 0.630163);
		--accent: color(display-p3 0.149382 0.149382 0.149382);
		--accent-foreground: color(display-p3 0.980256 0.980256 0.980256);
		--destructive: color(display-p3 0.933534 0.431676 0.423491);
		--border: color(display-p3 1 1 1/0.1);
		--input: color(display-p3 1 1 1/0.15);
		--ring: color(display-p3 0.451519 0.451519 0.451519);
		--chart-1: color(display-p3 0.1379 0.274983 0.867624);
		--chart-2: color(display-p3 0.267113 0.726847 0.508397);
		--chart-3: color(display-p3 0.93994 0.620584 0.0585367);
		--chart-4: color(display-p3 0.629519 0.30089 0.990817);
		--chart-5: color(display-p3 0.921824 0.240748 0.355666);
		--sidebar: color(display-p3 0.0905274 0.0905274 0.0905274);
		--sidebar-foreground: color(display-p3 0.980256 0.980256 0.980256);
		--sidebar-primary: color(display-p3 0.1379 0.274983 0.867624);
		--sidebar-primary-foreground: color(display-p3 0.980256 0.980256 0.980256);
		--sidebar-accent: color(display-p3 0.149382 0.149382 0.149382);
		--sidebar-accent-foreground: color(display-p3 0.980256 0.980256 0.980256);
		--sidebar-border: color(display-p3 1 1 1/0.1);
		--sidebar-ring: color(display-p3 0.451519 0.451519 0.451519);
	}
}
@supports (color: lab(0% 0 0)) {
	.dark {
		--background: lab(2.75381% 0 0);
		--foreground: lab(98.26% 0 0);
		--card: lab(7.78201% -0.0000149012 0);
		--card-foreground: lab(98.26% 0 0);
		--popover: lab(7.78201% -0.0000149012 0);
		--popover-foreground: lab(98.26% 0 0);
		--primary: lab(90.952% 0 -0.0000119209);
		--primary-foreground: lab(7.78201% -0.0000149012 0);
		--secondary: lab(15.204% 0 -0.00000596046);
		--secondary-foreground: lab(98.26% 0 0);
		--muted: lab(15.204% 0 -0.00000596046);
		--muted-foreground: lab(66.128% -0.0000298023 0.0000119209);
		--accent: lab(15.204% 0 -0.00000596046);
		--accent-foreground: lab(98.26% 0 0);
		--destructive: lab(63.7053% 60.745 31.3109);
		--border: lab(100% 0 0/0.1);
		--input: lab(100% 0 0/0.15);
		--ring: lab(48.496% 0 0);
		--chart-1: lab(36.9089% 35.0961 -85.6872);
		--chart-2: lab(66.9756% -58.27 19.5419);
		--chart-3: lab(72.7183% 31.8672 97.9407);
		--chart-4: lab(52.0183% 66.11 -78.2316);
		--chart-5: lab(56.101% 79.4328 31.4532);
		--sidebar: lab(7.78201% -0.0000149012 0);
		--sidebar-foreground: lab(98.26% 0 0);
		--sidebar-primary: lab(36.9089% 35.0961 -85.6872);
		--sidebar-primary-foreground: lab(98.26% 0 0);
		--sidebar-accent: lab(15.204% 0 -0.00000596046);
		--sidebar-accent-foreground: lab(98.26% 0 0);
		--sidebar-border: lab(100% 0 0/0.1);
		--sidebar-ring: lab(48.496% 0 0);
	}
}
@keyframes scroll {
	0% {
		transform: translate(0);
	}
	to {
		transform: translate(-50%);
	}
}
body {
	background: var(--background);
	color: var(--foreground);
	font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,
		Noto Sans, Ubuntu, Cantarell, Helvetica Neue, sans-serif;
	position: relative;
}
.iowan {
	font-family: Iowan Old Style, serif;
}
.iowan-main-blue {
	color: var(--main-blue);
	font-family: Iowan Old Style, serif;
}
.iowan-black {
	color: #000;
	font-family: Iowan Old Style, serif;
}
.geist-mono {
	font-family: Geist Mono, SF Mono, Monaco, Inconsolata, Roboto Mono,
		Oxygen Mono, Ubuntu Monospace, Source Code Pro, Fira Mono, Droid Sans Mono,
		Courier New, monospace;
}
.main-blue {
	color: var(--main-blue);
}
.button-main-blue {
	color: var(--main-blue);
	border-color: var(--main-blue);
}
body:after {
	content: "";
	opacity: 0.4;
	pointer-events: none;
	z-index: -1;
	background-image: linear-gradient(
			45deg,
			rgba(0, 0, 0, 0.03) 25%,
			transparent 25%
		),
		linear-gradient(-45deg, rgba(0, 0, 0, 0.03) 25%, transparent 25%),
		linear-gradient(45deg, transparent 75%, rgba(0, 0, 0, 0.03) 75%),
		linear-gradient(-45deg, transparent 75%, rgba(0, 0, 0, 0.03) 75%);
	background-position: 0 0, 0 3px, 3px -3px, -3px 0;
	background-size: 6px 6px;
	width: 100%;
	height: 100%;
	position: fixed;
	top: 0;
	left: 0;
}
body:before {
	content: "";
	pointer-events: none;
	z-index: -1;
	background-image: linear-gradient(
			45deg,
			rgba(0, 0, 0, 0.05) 25%,
			transparent 25%
		),
		linear-gradient(-45deg, rgba(0, 0, 0, 0.05) 25%, transparent 25%),
		linear-gradient(45deg, transparent 75%, rgba(0, 0, 0, 0.05) 75%),
		linear-gradient(-45deg, transparent 75%, rgba(0, 0, 0, 0.05) 75%);
	background-position: 0 0, 0 3px, 3px -3px, -3px 0;
	background-size: 6px 6px;
	width: 100%;
	height: 100%;
	position: fixed;
	top: 0;
	left: 0;
}
.hatch-pattern {
	position: relative;
}
.hatch-pattern:before {
	content: "";
	opacity: 0.4;
	pointer-events: none;
	z-index: 1;
	background-image: linear-gradient(
			45deg,
			rgba(0, 0, 0, 0.03) 25%,
			transparent 25%
		),
		linear-gradient(-45deg, rgba(0, 0, 0, 0.03) 25%, transparent 25%),
		linear-gradient(45deg, transparent 75%, rgba(0, 0, 0, 0.03) 75%),
		linear-gradient(-45deg, transparent 75%, rgba(0, 0, 0, 0.03) 75%);
	background-position: 0 0, 0 3px, 3px -3px, -3px 0;
	background-size: 6px 6px;
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
}
.animate-scroll {
	animation: 20s linear infinite scroll;
}
@keyframes moveUp {
	0%,
	to {
		transform: translateY(0);
	}
	50% {
		transform: translateY(-20px);
	}
}
@keyframes moveDown {
	0%,
	to {
		transform: translateY(0);
	}
	50% {
		transform: translateY(20px);
	}
}
@keyframes moveLeft {
	0%,
	to {
		transform: translate(0);
	}
	50% {
		transform: translate(-20px);
	}
}
@keyframes moveRight {
	0%,
	to {
		transform: translate(0);
	}
	50% {
		transform: translate(20px);
	}
}
@property --tw-translate-x {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-translate-y {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-translate-z {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-scale-x {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-scale-y {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-scale-z {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-rotate-x {
	syntax: "*";
	inherits: false;
}
@property --tw-rotate-y {
	syntax: "*";
	inherits: false;
}
@property --tw-rotate-z {
	syntax: "*";
	inherits: false;
}
@property --tw-skew-x {
	syntax: "*";
	inherits: false;
}
@property --tw-skew-y {
	syntax: "*";
	inherits: false;
}
@property --tw-space-y-reverse {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-space-x-reverse {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-divide-y-reverse {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-border-style {
	syntax: "*";
	inherits: false;
	initial-value: solid;
}
@property --tw-gradient-position {
	syntax: "*";
	inherits: false;
}
@property --tw-gradient-from {
	syntax: "<color>";
	inherits: false;
	initial-value: transparent;
}
@property --tw-gradient-via {
	syntax: "<color>";
	inherits: false;
	initial-value: transparent;
}
@property --tw-gradient-to {
	syntax: "<color>";
	inherits: false;
	initial-value: transparent;
}
@property --tw-gradient-stops {
	syntax: "*";
	inherits: false;
}
@property --tw-gradient-via-stops {
	syntax: "*";
	inherits: false;
}
@property --tw-gradient-from-position {
	syntax: "<length-percentage>";
	inherits: false;
	initial-value: 0%;
}
@property --tw-gradient-via-position {
	syntax: "<length-percentage>";
	inherits: false;
	initial-value: 50%;
}
@property --tw-gradient-to-position {
	syntax: "<length-percentage>";
	inherits: false;
	initial-value: 100%;
}
@property --tw-leading {
	syntax: "*";
	inherits: false;
}
@property --tw-font-weight {
	syntax: "*";
	inherits: false;
}
@property --tw-tracking {
	syntax: "*";
	inherits: false;
}
@property --tw-shadow {
	syntax: "*";
	inherits: false;
	initial-value: 0 0 transparent;
}
@property --tw-shadow-color {
	syntax: "*";
	inherits: false;
}
@property --tw-shadow-alpha {
	syntax: "<percentage>";
	inherits: false;
	initial-value: 100%;
}
@property --tw-inset-shadow {
	syntax: "*";
	inherits: false;
	initial-value: 0 0 transparent;
}
@property --tw-inset-shadow-color {
	syntax: "*";
	inherits: false;
}
@property --tw-inset-shadow-alpha {
	syntax: "<percentage>";
	inherits: false;
	initial-value: 100%;
}
@property --tw-ring-color {
	syntax: "*";
	inherits: false;
}
@property --tw-ring-shadow {
	syntax: "*";
	inherits: false;
	initial-value: 0 0 transparent;
}
@property --tw-inset-ring-color {
	syntax: "*";
	inherits: false;
}
@property --tw-inset-ring-shadow {
	syntax: "*";
	inherits: false;
	initial-value: 0 0 transparent;
}
@property --tw-ring-inset {
	syntax: "*";
	inherits: false;
}
@property --tw-ring-offset-width {
	syntax: "<length>";
	inherits: false;
	initial-value: 0;
}
@property --tw-ring-offset-color {
	syntax: "*";
	inherits: false;
	initial-value: #fff;
}
@property --tw-ring-offset-shadow {
	syntax: "*";
	inherits: false;
	initial-value: 0 0 transparent;
}
@property --tw-outline-style {
	syntax: "*";
	inherits: false;
	initial-value: solid;
}
@property --tw-blur {
	syntax: "*";
	inherits: false;
}
@property --tw-brightness {
	syntax: "*";
	inherits: false;
}
@property --tw-contrast {
	syntax: "*";
	inherits: false;
}
@property --tw-grayscale {
	syntax: "*";
	inherits: false;
}
@property --tw-hue-rotate {
	syntax: "*";
	inherits: false;
}
@property --tw-invert {
	syntax: "*";
	inherits: false;
}
@property --tw-opacity {
	syntax: "*";
	inherits: false;
}
@property --tw-saturate {
	syntax: "*";
	inherits: false;
}
@property --tw-sepia {
	syntax: "*";
	inherits: false;
}
@property --tw-drop-shadow {
	syntax: "*";
	inherits: false;
}
@property --tw-drop-shadow-color {
	syntax: "*";
	inherits: false;
}
@property --tw-drop-shadow-alpha {
	syntax: "<percentage>";
	inherits: false;
	initial-value: 100%;
}
@property --tw-drop-shadow-size {
	syntax: "*";
	inherits: false;
}
@property --tw-duration {
	syntax: "*";
	inherits: false;
}
@property --tw-ease {
	syntax: "*";
	inherits: false;
}
@keyframes spin {
	to {
		transform: rotate(360deg);
	}
}
@keyframes pulse {
	50% {
		opacity: 0.5;
	}
}
@keyframes enter {
	0% {
		opacity: var(--tw-enter-opacity, 1);
		transform: translate3d(
				var(--tw-enter-translate-x, 0),
				var(--tw-enter-translate-y, 0),
				0
			)
			scale3d(
				var(--tw-enter-scale, 1),
				var(--tw-enter-scale, 1),
				var(--tw-enter-scale, 1)
			)
			rotate(var(--tw-enter-rotate, 0));
		filter: blur(var(--tw-enter-blur, 0));
	}
}
@keyframes exit {
	to {
		opacity: var(--tw-exit-opacity, 1);
		transform: translate3d(
				var(--tw-exit-translate-x, 0),
				var(--tw-exit-translate-y, 0),
				0
			)
			scale3d(
				var(--tw-exit-scale, 1),
				var(--tw-exit-scale, 1),
				var(--tw-exit-scale, 1)
			)
			rotate(var(--tw-exit-rotate, 0));
		filter: blur(var(--tw-exit-blur, 0));
	}
}
